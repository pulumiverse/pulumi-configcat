// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Configcat
{
    [ConfigcatResourceType("configcat:index/productPreferences:ProductPreferences")]
    public partial class ProductPreferences : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Determines the Feature Flag key generation mode. Available values:
        /// `camelCase`|`upperCase`|`lowerCase`|`pascalCase`|`kebabCase`. Default: `camelCase`.
        /// </summary>
        [Output("keyGenerationMode")]
        public Output<string> KeyGenerationMode { get; private set; } = null!;

        /// <summary>
        /// Indicates whether Feature flags and Settings must have a hint. Default: false.
        /// </summary>
        [Output("mandatorySettingHint")]
        public Output<bool> MandatorySettingHint { get; private set; } = null!;

        /// <summary>
        /// The ID of the Product.
        /// </summary>
        [Output("productId")]
        public Output<string> ProductId { get; private set; } = null!;

        /// <summary>
        /// Indicates that a mandatory note is required for saving and publishing. Default: false.
        /// </summary>
        [Output("reasonRequired")]
        public Output<bool> ReasonRequired { get; private set; } = null!;

        /// <summary>
        /// The environment specific mandatory note map block. Keys are the Environment IDs and the values indicate that a mandatory
        /// note is required for saving and publishing.
        /// </summary>
        [Output("reasonRequiredEnvironments")]
        public Output<ImmutableDictionary<string, bool>> ReasonRequiredEnvironments { get; private set; } = null!;

        /// <summary>
        /// Indicates whether variation IDs must be shown on the ConfigCat Dashboard. Default: false.
        /// </summary>
        [Output("showVariationId")]
        public Output<bool> ShowVariationId { get; private set; } = null!;


        /// <summary>
        /// Create a ProductPreferences resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProductPreferences(string name, ProductPreferencesArgs args, CustomResourceOptions? options = null)
            : base("configcat:index/productPreferences:ProductPreferences", name, args ?? new ProductPreferencesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProductPreferences(string name, Input<string> id, ProductPreferencesState? state = null, CustomResourceOptions? options = null)
            : base("configcat:index/productPreferences:ProductPreferences", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "api://github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProductPreferences resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProductPreferences Get(string name, Input<string> id, ProductPreferencesState? state = null, CustomResourceOptions? options = null)
        {
            return new ProductPreferences(name, id, state, options);
        }
    }

    public sealed class ProductPreferencesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Determines the Feature Flag key generation mode. Available values:
        /// `camelCase`|`upperCase`|`lowerCase`|`pascalCase`|`kebabCase`. Default: `camelCase`.
        /// </summary>
        [Input("keyGenerationMode")]
        public Input<string>? KeyGenerationMode { get; set; }

        /// <summary>
        /// Indicates whether Feature flags and Settings must have a hint. Default: false.
        /// </summary>
        [Input("mandatorySettingHint")]
        public Input<bool>? MandatorySettingHint { get; set; }

        /// <summary>
        /// The ID of the Product.
        /// </summary>
        [Input("productId", required: true)]
        public Input<string> ProductId { get; set; } = null!;

        /// <summary>
        /// Indicates that a mandatory note is required for saving and publishing. Default: false.
        /// </summary>
        [Input("reasonRequired")]
        public Input<bool>? ReasonRequired { get; set; }

        [Input("reasonRequiredEnvironments")]
        private InputMap<bool>? _reasonRequiredEnvironments;

        /// <summary>
        /// The environment specific mandatory note map block. Keys are the Environment IDs and the values indicate that a mandatory
        /// note is required for saving and publishing.
        /// </summary>
        public InputMap<bool> ReasonRequiredEnvironments
        {
            get => _reasonRequiredEnvironments ?? (_reasonRequiredEnvironments = new InputMap<bool>());
            set => _reasonRequiredEnvironments = value;
        }

        /// <summary>
        /// Indicates whether variation IDs must be shown on the ConfigCat Dashboard. Default: false.
        /// </summary>
        [Input("showVariationId")]
        public Input<bool>? ShowVariationId { get; set; }

        public ProductPreferencesArgs()
        {
        }
        public static new ProductPreferencesArgs Empty => new ProductPreferencesArgs();
    }

    public sealed class ProductPreferencesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Determines the Feature Flag key generation mode. Available values:
        /// `camelCase`|`upperCase`|`lowerCase`|`pascalCase`|`kebabCase`. Default: `camelCase`.
        /// </summary>
        [Input("keyGenerationMode")]
        public Input<string>? KeyGenerationMode { get; set; }

        /// <summary>
        /// Indicates whether Feature flags and Settings must have a hint. Default: false.
        /// </summary>
        [Input("mandatorySettingHint")]
        public Input<bool>? MandatorySettingHint { get; set; }

        /// <summary>
        /// The ID of the Product.
        /// </summary>
        [Input("productId")]
        public Input<string>? ProductId { get; set; }

        /// <summary>
        /// Indicates that a mandatory note is required for saving and publishing. Default: false.
        /// </summary>
        [Input("reasonRequired")]
        public Input<bool>? ReasonRequired { get; set; }

        [Input("reasonRequiredEnvironments")]
        private InputMap<bool>? _reasonRequiredEnvironments;

        /// <summary>
        /// The environment specific mandatory note map block. Keys are the Environment IDs and the values indicate that a mandatory
        /// note is required for saving and publishing.
        /// </summary>
        public InputMap<bool> ReasonRequiredEnvironments
        {
            get => _reasonRequiredEnvironments ?? (_reasonRequiredEnvironments = new InputMap<bool>());
            set => _reasonRequiredEnvironments = value;
        }

        /// <summary>
        /// Indicates whether variation IDs must be shown on the ConfigCat Dashboard. Default: false.
        /// </summary>
        [Input("showVariationId")]
        public Input<bool>? ShowVariationId { get; set; }

        public ProductPreferencesState()
        {
        }
        public static new ProductPreferencesState Empty => new ProductPreferencesState();
    }
}
