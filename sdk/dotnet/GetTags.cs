// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Configcat
{
    public static class GetTags
    {
        public static Task<GetTagsResult> InvokeAsync(GetTagsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTagsResult>("configcat:index/getTags:getTags", args ?? new GetTagsArgs(), options.WithDefaults());

        public static Output<GetTagsResult> Invoke(GetTagsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTagsResult>("configcat:index/getTags:getTags", args ?? new GetTagsInvokeArgs(), options.WithDefaults());

        public static Output<GetTagsResult> Invoke(GetTagsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTagsResult>("configcat:index/getTags:getTags", args ?? new GetTagsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTagsArgs : global::Pulumi.InvokeArgs
    {
        [Input("nameFilterRegex")]
        public string? NameFilterRegex { get; set; }

        [Input("productId", required: true)]
        public string ProductId { get; set; } = null!;

        public GetTagsArgs()
        {
        }
        public static new GetTagsArgs Empty => new GetTagsArgs();
    }

    public sealed class GetTagsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("nameFilterRegex")]
        public Input<string>? NameFilterRegex { get; set; }

        [Input("productId", required: true)]
        public Input<string> ProductId { get; set; } = null!;

        public GetTagsInvokeArgs()
        {
        }
        public static new GetTagsInvokeArgs Empty => new GetTagsInvokeArgs();
    }


    [OutputType]
    public sealed class GetTagsResult
    {
        public readonly string Id;
        public readonly string? NameFilterRegex;
        public readonly string ProductId;
        public readonly ImmutableArray<Outputs.GetTagsTagResult> Tags;

        [OutputConstructor]
        private GetTagsResult(
            string id,

            string? nameFilterRegex,

            string productId,

            ImmutableArray<Outputs.GetTagsTagResult> tags)
        {
            Id = id;
            NameFilterRegex = nameFilterRegex;
            ProductId = productId;
            Tags = tags;
        }
    }
}
