// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Configcat
{
    public static class GetTags
    {
        /// <summary>
        /// ## # configcat.getTags Resource
        /// 
        /// Use this data source to access information about existing **Tags**.
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Configcat = Pulumi.Configcat;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myProducts = Configcat.GetProducts.Invoke(new()
        ///     {
        ///         NameFilterRegex = "ConfigCat's product",
        ///     });
        /// 
        ///     var myTags = Configcat.GetTags.Invoke(new()
        ///     {
        ///         ProductId = myProducts.Apply(getProductsResult =&gt; getProductsResult.Products[0]?.ProductId),
        ///         NameFilterRegex = "Test",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["tagId"] = myTags.Apply(getTagsResult =&gt; getTagsResult.Tags[0]?.TagId),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Endpoints used
        /// 
        /// - [List Tags](https://api.configcat.com/docs/#tag/Tags/operation/get-tags)
        /// </summary>
        public static Task<GetTagsResult> InvokeAsync(GetTagsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTagsResult>("configcat:index/getTags:getTags", args ?? new GetTagsArgs(), options.WithDefaults());

        /// <summary>
        /// ## # configcat.getTags Resource
        /// 
        /// Use this data source to access information about existing **Tags**.
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Configcat = Pulumi.Configcat;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myProducts = Configcat.GetProducts.Invoke(new()
        ///     {
        ///         NameFilterRegex = "ConfigCat's product",
        ///     });
        /// 
        ///     var myTags = Configcat.GetTags.Invoke(new()
        ///     {
        ///         ProductId = myProducts.Apply(getProductsResult =&gt; getProductsResult.Products[0]?.ProductId),
        ///         NameFilterRegex = "Test",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["tagId"] = myTags.Apply(getTagsResult =&gt; getTagsResult.Tags[0]?.TagId),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Endpoints used
        /// 
        /// - [List Tags](https://api.configcat.com/docs/#tag/Tags/operation/get-tags)
        /// </summary>
        public static Output<GetTagsResult> Invoke(GetTagsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTagsResult>("configcat:index/getTags:getTags", args ?? new GetTagsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## # configcat.getTags Resource
        /// 
        /// Use this data source to access information about existing **Tags**.
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Configcat = Pulumi.Configcat;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myProducts = Configcat.GetProducts.Invoke(new()
        ///     {
        ///         NameFilterRegex = "ConfigCat's product",
        ///     });
        /// 
        ///     var myTags = Configcat.GetTags.Invoke(new()
        ///     {
        ///         ProductId = myProducts.Apply(getProductsResult =&gt; getProductsResult.Products[0]?.ProductId),
        ///         NameFilterRegex = "Test",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["tagId"] = myTags.Apply(getTagsResult =&gt; getTagsResult.Tags[0]?.TagId),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Endpoints used
        /// 
        /// - [List Tags](https://api.configcat.com/docs/#tag/Tags/operation/get-tags)
        /// </summary>
        public static Output<GetTagsResult> Invoke(GetTagsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTagsResult>("configcat:index/getTags:getTags", args ?? new GetTagsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTagsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter the Tags by name.
        /// </summary>
        [Input("nameFilterRegex")]
        public string? NameFilterRegex { get; set; }

        /// <summary>
        /// The ID of the Product.
        /// </summary>
        [Input("productId", required: true)]
        public string ProductId { get; set; } = null!;

        public GetTagsArgs()
        {
        }
        public static new GetTagsArgs Empty => new GetTagsArgs();
    }

    public sealed class GetTagsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter the Tags by name.
        /// </summary>
        [Input("nameFilterRegex")]
        public Input<string>? NameFilterRegex { get; set; }

        /// <summary>
        /// The ID of the Product.
        /// </summary>
        [Input("productId", required: true)]
        public Input<string> ProductId { get; set; } = null!;

        public GetTagsInvokeArgs()
        {
        }
        public static new GetTagsInvokeArgs Empty => new GetTagsInvokeArgs();
    }


    [OutputType]
    public sealed class GetTagsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? NameFilterRegex;
        public readonly string ProductId;
        /// <summary>
        /// A tag list block defined as below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTagsTagResult> Tags;

        [OutputConstructor]
        private GetTagsResult(
            string id,

            string? nameFilterRegex,

            string productId,

            ImmutableArray<Outputs.GetTagsTagResult> tags)
        {
            Id = id;
            NameFilterRegex = nameFilterRegex;
            ProductId = productId;
            Tags = tags;
        }
    }
}
