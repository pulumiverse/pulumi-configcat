// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Configcat
{
    public static class GetSdkKeys
    {
        /// <summary>
        /// ## # configcat.getSdkKeys Resource
        /// 
        /// Use this data source to access information about **SDK Keys**.
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Configcat = Pulumi.Configcat;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myProducts = Configcat.GetProducts.Invoke(new()
        ///     {
        ///         NameFilterRegex = "ConfigCat's product",
        ///     });
        /// 
        ///     var myConfigs = Configcat.GetConfigs.Invoke(new()
        ///     {
        ///         ProductId = myProducts.Apply(getProductsResult =&gt; getProductsResult.Products[0]?.ProductId),
        ///         NameFilterRegex = "Main Config",
        ///     });
        /// 
        ///     var myEnvironments = Configcat.GetEnvironments.Invoke(new()
        ///     {
        ///         ProductId = myProducts.Apply(getProductsResult =&gt; getProductsResult.Products[0]?.ProductId),
        ///         NameFilterRegex = "Test",
        ///     });
        /// 
        ///     var mySdkkey = Configcat.GetSdkKeys.Invoke(new()
        ///     {
        ///         ConfigId = myConfigs.Apply(getConfigsResult =&gt; getConfigsResult.Configs[0]?.ConfigId),
        ///         EnvironmentId = myEnvironments.Apply(getEnvironmentsResult =&gt; getEnvironmentsResult.Environments[0]?.EnvironmentId),
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["primarySdkkey"] = mySdkkey.Apply(getSdkKeysResult =&gt; getSdkKeysResult.Primary),
        ///         ["secondarySdkkey"] = mySdkkey.Apply(getSdkKeysResult =&gt; getSdkKeysResult.Secondary),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Endpoints used
        /// 
        /// - [Get SDK Key](https://api.configcat.com/docs/#tag/SDK-Keys/operation/get-sdk-keys)
        /// </summary>
        public static Task<GetSdkKeysResult> InvokeAsync(GetSdkKeysArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSdkKeysResult>("configcat:index/getSdkKeys:getSdkKeys", args ?? new GetSdkKeysArgs(), options.WithDefaults());

        /// <summary>
        /// ## # configcat.getSdkKeys Resource
        /// 
        /// Use this data source to access information about **SDK Keys**.
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Configcat = Pulumi.Configcat;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myProducts = Configcat.GetProducts.Invoke(new()
        ///     {
        ///         NameFilterRegex = "ConfigCat's product",
        ///     });
        /// 
        ///     var myConfigs = Configcat.GetConfigs.Invoke(new()
        ///     {
        ///         ProductId = myProducts.Apply(getProductsResult =&gt; getProductsResult.Products[0]?.ProductId),
        ///         NameFilterRegex = "Main Config",
        ///     });
        /// 
        ///     var myEnvironments = Configcat.GetEnvironments.Invoke(new()
        ///     {
        ///         ProductId = myProducts.Apply(getProductsResult =&gt; getProductsResult.Products[0]?.ProductId),
        ///         NameFilterRegex = "Test",
        ///     });
        /// 
        ///     var mySdkkey = Configcat.GetSdkKeys.Invoke(new()
        ///     {
        ///         ConfigId = myConfigs.Apply(getConfigsResult =&gt; getConfigsResult.Configs[0]?.ConfigId),
        ///         EnvironmentId = myEnvironments.Apply(getEnvironmentsResult =&gt; getEnvironmentsResult.Environments[0]?.EnvironmentId),
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["primarySdkkey"] = mySdkkey.Apply(getSdkKeysResult =&gt; getSdkKeysResult.Primary),
        ///         ["secondarySdkkey"] = mySdkkey.Apply(getSdkKeysResult =&gt; getSdkKeysResult.Secondary),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Endpoints used
        /// 
        /// - [Get SDK Key](https://api.configcat.com/docs/#tag/SDK-Keys/operation/get-sdk-keys)
        /// </summary>
        public static Output<GetSdkKeysResult> Invoke(GetSdkKeysInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSdkKeysResult>("configcat:index/getSdkKeys:getSdkKeys", args ?? new GetSdkKeysInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSdkKeysArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Config.
        /// </summary>
        [Input("configId", required: true)]
        public string ConfigId { get; set; } = null!;

        /// <summary>
        /// The ID of the Environment.
        /// </summary>
        [Input("environmentId", required: true)]
        public string EnvironmentId { get; set; } = null!;

        public GetSdkKeysArgs()
        {
        }
        public static new GetSdkKeysArgs Empty => new GetSdkKeysArgs();
    }

    public sealed class GetSdkKeysInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Config.
        /// </summary>
        [Input("configId", required: true)]
        public Input<string> ConfigId { get; set; } = null!;

        /// <summary>
        /// The ID of the Environment.
        /// </summary>
        [Input("environmentId", required: true)]
        public Input<string> EnvironmentId { get; set; } = null!;

        public GetSdkKeysInvokeArgs()
        {
        }
        public static new GetSdkKeysInvokeArgs Empty => new GetSdkKeysInvokeArgs();
    }


    [OutputType]
    public sealed class GetSdkKeysResult
    {
        public readonly string ConfigId;
        public readonly string EnvironmentId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The primary SDK Key associated with your **Config** and **Environment**.
        /// </summary>
        public readonly string Primary;
        /// <summary>
        /// The secondary SDK Key associated with your **Config** and **Environment**.
        /// </summary>
        public readonly string Secondary;

        [OutputConstructor]
        private GetSdkKeysResult(
            string configId,

            string environmentId,

            string id,

            string primary,

            string secondary)
        {
            ConfigId = configId;
            EnvironmentId = environmentId;
            Id = id;
            Primary = primary;
            Secondary = secondary;
        }
    }
}
