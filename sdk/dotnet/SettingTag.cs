// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Configcat
{
    [ConfigcatResourceType("configcat:index/settingTag:SettingTag")]
    public partial class SettingTag : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Feature Flag or Setting.
        /// </summary>
        [Output("settingId")]
        public Output<string> SettingId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Tag.
        /// </summary>
        [Output("tagId")]
        public Output<string> TagId { get; private set; } = null!;


        /// <summary>
        /// Create a SettingTag resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SettingTag(string name, SettingTagArgs args, CustomResourceOptions? options = null)
            : base("configcat:index/settingTag:SettingTag", name, args ?? new SettingTagArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SettingTag(string name, Input<string> id, SettingTagState? state = null, CustomResourceOptions? options = null)
            : base("configcat:index/settingTag:SettingTag", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "api://github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SettingTag resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SettingTag Get(string name, Input<string> id, SettingTagState? state = null, CustomResourceOptions? options = null)
        {
            return new SettingTag(name, id, state, options);
        }
    }

    public sealed class SettingTagArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Feature Flag or Setting.
        /// </summary>
        [Input("settingId", required: true)]
        public Input<string> SettingId { get; set; } = null!;

        /// <summary>
        /// The ID of the Tag.
        /// </summary>
        [Input("tagId", required: true)]
        public Input<string> TagId { get; set; } = null!;

        public SettingTagArgs()
        {
        }
        public static new SettingTagArgs Empty => new SettingTagArgs();
    }

    public sealed class SettingTagState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Feature Flag or Setting.
        /// </summary>
        [Input("settingId")]
        public Input<string>? SettingId { get; set; }

        /// <summary>
        /// The ID of the Tag.
        /// </summary>
        [Input("tagId")]
        public Input<string>? TagId { get; set; }

        public SettingTagState()
        {
        }
        public static new SettingTagState Empty => new SettingTagState();
    }
}
