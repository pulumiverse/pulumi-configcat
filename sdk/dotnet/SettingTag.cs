// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Configcat
{
    /// <summary>
    /// ## # configcat.SettingTag Resource
    /// 
    /// Adds/Removes **Tags** to/from **Feature Flags and Settings**.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Configcat = Pulumi.Configcat;
    /// using Configcat = Pulumiverse.Configcat;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myProducts = Configcat.GetProducts.Invoke(new()
    ///     {
    ///         NameFilterRegex = "ConfigCat's product",
    ///     });
    /// 
    ///     var myConfigs = Configcat.GetConfigs.Invoke(new()
    ///     {
    ///         ProductId = myProducts.Apply(getProductsResult =&gt; getProductsResult.Products[0]?.ProductId),
    ///         NameFilterRegex = "Main Config",
    ///     });
    /// 
    ///     var myTags = Configcat.GetTags.Invoke(new()
    ///     {
    ///         ProductId = myProducts.Apply(getProductsResult =&gt; getProductsResult.Products[0]?.ProductId),
    ///         NameFilterRegex = "Tag",
    ///     });
    /// 
    ///     var mySettings = Configcat.GetSettings.Invoke(new()
    ///     {
    ///         ConfigId = myConfigs.Apply(getConfigsResult =&gt; getConfigsResult.Configs[0]?.ConfigId),
    ///         KeyFilterRegex = "isAwesomeFeatureEnabled",
    ///     });
    /// 
    ///     var mySettingTag = new Configcat.SettingTag("mySettingTag", new()
    ///     {
    ///         SettingId = mySettings.Apply(getSettingsResult =&gt; getSettingsResult.Settings[0]?.SettingId),
    ///         TagId = myTags.Apply(getTagsResult =&gt; getTagsResult.Tags[0]?.TagId),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Endpoints used
    /// 
    /// * [Get Flag](https://api.configcat.com/docs/#tag/Feature-Flags-and-Settings/operation/get-setting)
    /// * [Update Flag](https://api.configcat.com/docs/#tag/Feature-Flags-and-Settings/operation/update-setting)
    /// 
    /// ## Import
    /// 
    /// Tags can be imported using a combined SettingId:TagId ID.
    /// 
    /// Get the SettingId using e.g. the [List Flags API](https://api.configcat.com/docs/#tag/Feature-Flags-and-Settings/operation/get-settings).
    /// 
    /// Get the TagId using e.g. the [List Tags API](https://api.configcat.com/docs/#tag/Tags/operation/get-tags).
    /// 
    /// ```sh
    /// $ pulumi import configcat:index/settingTag:SettingTag example 1234:5678
    /// ```
    /// 
    /// Read more about importing.
    /// </summary>
    [ConfigcatResourceType("configcat:index/settingTag:SettingTag")]
    public partial class SettingTag : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Feature Flag/Setting.
        /// </summary>
        [Output("settingId")]
        public Output<string> SettingId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Tag.
        /// </summary>
        [Output("tagId")]
        public Output<string> TagId { get; private set; } = null!;


        /// <summary>
        /// Create a SettingTag resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SettingTag(string name, SettingTagArgs args, CustomResourceOptions? options = null)
            : base("configcat:index/settingTag:SettingTag", name, args ?? new SettingTagArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SettingTag(string name, Input<string> id, SettingTagState? state = null, CustomResourceOptions? options = null)
            : base("configcat:index/settingTag:SettingTag", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "api://github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SettingTag resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SettingTag Get(string name, Input<string> id, SettingTagState? state = null, CustomResourceOptions? options = null)
        {
            return new SettingTag(name, id, state, options);
        }
    }

    public sealed class SettingTagArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Feature Flag/Setting.
        /// </summary>
        [Input("settingId", required: true)]
        public Input<string> SettingId { get; set; } = null!;

        /// <summary>
        /// The ID of the Tag.
        /// </summary>
        [Input("tagId", required: true)]
        public Input<string> TagId { get; set; } = null!;

        public SettingTagArgs()
        {
        }
        public static new SettingTagArgs Empty => new SettingTagArgs();
    }

    public sealed class SettingTagState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Feature Flag/Setting.
        /// </summary>
        [Input("settingId")]
        public Input<string>? SettingId { get; set; }

        /// <summary>
        /// The ID of the Tag.
        /// </summary>
        [Input("tagId")]
        public Input<string>? TagId { get; set; }

        public SettingTagState()
        {
        }
        public static new SettingTagState Empty => new SettingTagState();
    }
}
