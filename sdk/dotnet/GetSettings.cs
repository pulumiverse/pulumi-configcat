// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Configcat
{
    public static class GetSettings
    {
        public static Task<GetSettingsResult> InvokeAsync(GetSettingsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSettingsResult>("configcat:index/getSettings:getSettings", args ?? new GetSettingsArgs(), options.WithDefaults());

        public static Output<GetSettingsResult> Invoke(GetSettingsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSettingsResult>("configcat:index/getSettings:getSettings", args ?? new GetSettingsInvokeArgs(), options.WithDefaults());

        public static Output<GetSettingsResult> Invoke(GetSettingsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSettingsResult>("configcat:index/getSettings:getSettings", args ?? new GetSettingsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSettingsArgs : global::Pulumi.InvokeArgs
    {
        [Input("configId", required: true)]
        public string ConfigId { get; set; } = null!;

        [Input("keyFilterRegex")]
        public string? KeyFilterRegex { get; set; }

        public GetSettingsArgs()
        {
        }
        public static new GetSettingsArgs Empty => new GetSettingsArgs();
    }

    public sealed class GetSettingsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("configId", required: true)]
        public Input<string> ConfigId { get; set; } = null!;

        [Input("keyFilterRegex")]
        public Input<string>? KeyFilterRegex { get; set; }

        public GetSettingsInvokeArgs()
        {
        }
        public static new GetSettingsInvokeArgs Empty => new GetSettingsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSettingsResult
    {
        public readonly string ConfigId;
        public readonly string Id;
        public readonly string? KeyFilterRegex;
        public readonly ImmutableArray<Outputs.GetSettingsSettingResult> Settings;

        [OutputConstructor]
        private GetSettingsResult(
            string configId,

            string id,

            string? keyFilterRegex,

            ImmutableArray<Outputs.GetSettingsSettingResult> settings)
        {
            ConfigId = configId;
            Id = id;
            KeyFilterRegex = keyFilterRegex;
            Settings = settings;
        }
    }
}
