// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Configcat
{
    public static class GetProducts
    {
        public static Task<GetProductsResult> InvokeAsync(GetProductsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProductsResult>("configcat:index/getProducts:getProducts", args ?? new GetProductsArgs(), options.WithDefaults());

        public static Output<GetProductsResult> Invoke(GetProductsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProductsResult>("configcat:index/getProducts:getProducts", args ?? new GetProductsInvokeArgs(), options.WithDefaults());

        public static Output<GetProductsResult> Invoke(GetProductsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetProductsResult>("configcat:index/getProducts:getProducts", args ?? new GetProductsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProductsArgs : global::Pulumi.InvokeArgs
    {
        [Input("nameFilterRegex")]
        public string? NameFilterRegex { get; set; }

        public GetProductsArgs()
        {
        }
        public static new GetProductsArgs Empty => new GetProductsArgs();
    }

    public sealed class GetProductsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("nameFilterRegex")]
        public Input<string>? NameFilterRegex { get; set; }

        public GetProductsInvokeArgs()
        {
        }
        public static new GetProductsInvokeArgs Empty => new GetProductsInvokeArgs();
    }


    [OutputType]
    public sealed class GetProductsResult
    {
        public readonly string Id;
        public readonly string? NameFilterRegex;
        public readonly ImmutableArray<Outputs.GetProductsProductResult> Products;

        [OutputConstructor]
        private GetProductsResult(
            string id,

            string? nameFilterRegex,

            ImmutableArray<Outputs.GetProductsProductResult> products)
        {
            Id = id;
            NameFilterRegex = nameFilterRegex;
            Products = products;
        }
    }
}
