// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Configcat
{
    public static class GetConfigs
    {
        /// <summary>
        /// ## # configcat.getConfigs Resource
        /// 
        /// Use this data source to access information about existing **Configs**. [What is a Config in ConfigCat?](https://configcat.com/docs/main-concepts)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Configcat = Pulumi.Configcat;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myProducts = Configcat.GetProducts.Invoke(new()
        ///     {
        ///         NameFilterRegex = "ConfigCat's product",
        ///     });
        /// 
        ///     var myConfigs = Configcat.GetConfigs.Invoke(new()
        ///     {
        ///         ProductId = myProducts.Apply(getProductsResult =&gt; getProductsResult.Products[0]?.ProductId),
        ///         NameFilterRegex = "Main Config",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["configId"] = myConfigs.Apply(getConfigsResult =&gt; getConfigsResult.Configs[0]?.ConfigId),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Endpoints used
        /// 
        /// [List Configs](https://api.configcat.com/docs/#tag/Configs/operation/get-configs)
        /// </summary>
        public static Task<GetConfigsResult> InvokeAsync(GetConfigsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConfigsResult>("configcat:index/getConfigs:getConfigs", args ?? new GetConfigsArgs(), options.WithDefaults());

        /// <summary>
        /// ## # configcat.getConfigs Resource
        /// 
        /// Use this data source to access information about existing **Configs**. [What is a Config in ConfigCat?](https://configcat.com/docs/main-concepts)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Configcat = Pulumi.Configcat;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myProducts = Configcat.GetProducts.Invoke(new()
        ///     {
        ///         NameFilterRegex = "ConfigCat's product",
        ///     });
        /// 
        ///     var myConfigs = Configcat.GetConfigs.Invoke(new()
        ///     {
        ///         ProductId = myProducts.Apply(getProductsResult =&gt; getProductsResult.Products[0]?.ProductId),
        ///         NameFilterRegex = "Main Config",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["configId"] = myConfigs.Apply(getConfigsResult =&gt; getConfigsResult.Configs[0]?.ConfigId),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Endpoints used
        /// 
        /// [List Configs](https://api.configcat.com/docs/#tag/Configs/operation/get-configs)
        /// </summary>
        public static Output<GetConfigsResult> Invoke(GetConfigsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConfigsResult>("configcat:index/getConfigs:getConfigs", args ?? new GetConfigsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## # configcat.getConfigs Resource
        /// 
        /// Use this data source to access information about existing **Configs**. [What is a Config in ConfigCat?](https://configcat.com/docs/main-concepts)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Configcat = Pulumi.Configcat;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myProducts = Configcat.GetProducts.Invoke(new()
        ///     {
        ///         NameFilterRegex = "ConfigCat's product",
        ///     });
        /// 
        ///     var myConfigs = Configcat.GetConfigs.Invoke(new()
        ///     {
        ///         ProductId = myProducts.Apply(getProductsResult =&gt; getProductsResult.Products[0]?.ProductId),
        ///         NameFilterRegex = "Main Config",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["configId"] = myConfigs.Apply(getConfigsResult =&gt; getConfigsResult.Configs[0]?.ConfigId),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Endpoints used
        /// 
        /// [List Configs](https://api.configcat.com/docs/#tag/Configs/operation/get-configs)
        /// </summary>
        public static Output<GetConfigsResult> Invoke(GetConfigsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetConfigsResult>("configcat:index/getConfigs:getConfigs", args ?? new GetConfigsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConfigsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter the Configs by name.
        /// </summary>
        [Input("nameFilterRegex")]
        public string? NameFilterRegex { get; set; }

        /// <summary>
        /// The ID of the Product.
        /// </summary>
        [Input("productId", required: true)]
        public string ProductId { get; set; } = null!;

        public GetConfigsArgs()
        {
        }
        public static new GetConfigsArgs Empty => new GetConfigsArgs();
    }

    public sealed class GetConfigsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter the Configs by name.
        /// </summary>
        [Input("nameFilterRegex")]
        public Input<string>? NameFilterRegex { get; set; }

        /// <summary>
        /// The ID of the Product.
        /// </summary>
        [Input("productId", required: true)]
        public Input<string> ProductId { get; set; } = null!;

        public GetConfigsInvokeArgs()
        {
        }
        public static new GetConfigsInvokeArgs Empty => new GetConfigsInvokeArgs();
    }


    [OutputType]
    public sealed class GetConfigsResult
    {
        /// <summary>
        /// A config list block defined as below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConfigsConfigResult> Configs;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? NameFilterRegex;
        public readonly string ProductId;

        [OutputConstructor]
        private GetConfigsResult(
            ImmutableArray<Outputs.GetConfigsConfigResult> configs,

            string id,

            string? nameFilterRegex,

            string productId)
        {
            Configs = configs;
            Id = id;
            NameFilterRegex = nameFilterRegex;
            ProductId = productId;
        }
    }
}
