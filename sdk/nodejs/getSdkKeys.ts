// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to access information about existing **SDK Keys**.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as configcat from "@pulumi/configcat";
 *
 * const config = new pulumi.Config();
 * const configId = config.require("configId");
 * const environmentId = config.require("environmentId");
 * const mySdkkey = configcat.getSdkKeys({
 *     configId: configId,
 *     environmentId: environmentId,
 * });
 * export const primarySdkkey = mySdkkey.then(mySdkkey => mySdkkey.primary);
 * export const secondarySdkkey = mySdkkey.then(mySdkkey => mySdkkey.secondary);
 * ```
 */
export function getSdkKeys(args: GetSdkKeysArgs, opts?: pulumi.InvokeOptions): Promise<GetSdkKeysResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("configcat:index/getSdkKeys:getSdkKeys", {
        "configId": args.configId,
        "environmentId": args.environmentId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSdkKeys.
 */
export interface GetSdkKeysArgs {
    /**
     * The ID of the Config.
     */
    configId: string;
    /**
     * The ID of the Environment.
     */
    environmentId: string;
}

/**
 * A collection of values returned by getSdkKeys.
 */
export interface GetSdkKeysResult {
    /**
     * The ID of the Config.
     */
    readonly configId: string;
    /**
     * The ID of the Environment.
     */
    readonly environmentId: string;
    /**
     * Internal ID of the data source. Do not use.
     */
    readonly id: string;
    /**
     * The primary SDK Key associated with your **Config** and **Environment**.
     */
    readonly primary: string;
    /**
     * The secondary SDK Key associated with your **Config** and **Environment**.
     */
    readonly secondary: string;
}
/**
 * Use this data source to access information about existing **SDK Keys**.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as configcat from "@pulumi/configcat";
 *
 * const config = new pulumi.Config();
 * const configId = config.require("configId");
 * const environmentId = config.require("environmentId");
 * const mySdkkey = configcat.getSdkKeys({
 *     configId: configId,
 *     environmentId: environmentId,
 * });
 * export const primarySdkkey = mySdkkey.then(mySdkkey => mySdkkey.primary);
 * export const secondarySdkkey = mySdkkey.then(mySdkkey => mySdkkey.secondary);
 * ```
 */
export function getSdkKeysOutput(args: GetSdkKeysOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSdkKeysResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("configcat:index/getSdkKeys:getSdkKeys", {
        "configId": args.configId,
        "environmentId": args.environmentId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSdkKeys.
 */
export interface GetSdkKeysOutputArgs {
    /**
     * The ID of the Config.
     */
    configId: pulumi.Input<string>;
    /**
     * The ID of the Environment.
     */
    environmentId: pulumi.Input<string>;
}
