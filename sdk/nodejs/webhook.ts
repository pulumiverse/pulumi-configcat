// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Creates and manages a **Webhook**. [What is a Webhook in ConfigCat?](https://configcat.com/docs/advanced/notifications-webhooks/)
 *
 * ## Import
 *
 * Webhooks can be imported using the WebhookId. Get the WebhookId using the [List Webhooks API](https://api.configcat.com/docs/index.html#tag/Webhooks/operation/get-webhooks) for example.
 *
 * It is important to note that webhooks containing secure webhook headers cannot be imported via `pulumi import`.
 *
 * If you want to manage your webhooks that already contain secure webhook headers, you should create brand new configcat_webhook resources in Terraform without importing them. After they are created successfully and managed by Terraform, you can safely delete the old, non Terraform managed webhook from the ConfigCat Dashboard.
 *
 * ```sh
 * $ pulumi import configcat:index/webhook:Webhook example 1234
 * ```
 */
export class Webhook extends pulumi.CustomResource {
    /**
     * Get an existing Webhook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebhookState, opts?: pulumi.CustomResourceOptions): Webhook {
        return new Webhook(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'configcat:index/webhook:Webhook';

    /**
     * Returns true if the given object is an instance of Webhook.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Webhook {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Webhook.__pulumiType;
    }

    /**
     * The ID of the Config.
     */
    public readonly configId!: pulumi.Output<string>;
    /**
     * The HTTP body content.
     */
    public readonly content!: pulumi.Output<string | undefined>;
    /**
     * The ID of the Environment.
     */
    public readonly environmentId!: pulumi.Output<string>;
    /**
     * The HTTP method. Available values: `get`|`post`. Default: `get`
     */
    public readonly httpMethod!: pulumi.Output<string>;
    public readonly secureWebhookHeaders!: pulumi.Output<outputs.WebhookSecureWebhookHeader[] | undefined>;
    /**
     * The URL of the Webhook.
     */
    public readonly url!: pulumi.Output<string>;
    /**
     * List of plain text HTTP headers. The value of a plain text header is always visible for everyone. It also appears in audit logs and on the webhook test UI.
     */
    public readonly webhookHeaders!: pulumi.Output<outputs.WebhookWebhookHeader[] | undefined>;

    /**
     * Create a Webhook resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebhookArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebhookArgs | WebhookState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WebhookState | undefined;
            resourceInputs["configId"] = state ? state.configId : undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["httpMethod"] = state ? state.httpMethod : undefined;
            resourceInputs["secureWebhookHeaders"] = state ? state.secureWebhookHeaders : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
            resourceInputs["webhookHeaders"] = state ? state.webhookHeaders : undefined;
        } else {
            const args = argsOrState as WebhookArgs | undefined;
            if ((!args || args.configId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configId'");
            }
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            if ((!args || args.url === undefined) && !opts.urn) {
                throw new Error("Missing required property 'url'");
            }
            resourceInputs["configId"] = args ? args.configId : undefined;
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["httpMethod"] = args ? args.httpMethod : undefined;
            resourceInputs["secureWebhookHeaders"] = args ? args.secureWebhookHeaders : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
            resourceInputs["webhookHeaders"] = args ? args.webhookHeaders : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Webhook.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Webhook resources.
 */
export interface WebhookState {
    /**
     * The ID of the Config.
     */
    configId?: pulumi.Input<string>;
    /**
     * The HTTP body content.
     */
    content?: pulumi.Input<string>;
    /**
     * The ID of the Environment.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * The HTTP method. Available values: `get`|`post`. Default: `get`
     */
    httpMethod?: pulumi.Input<string>;
    secureWebhookHeaders?: pulumi.Input<pulumi.Input<inputs.WebhookSecureWebhookHeader>[]>;
    /**
     * The URL of the Webhook.
     */
    url?: pulumi.Input<string>;
    /**
     * List of plain text HTTP headers. The value of a plain text header is always visible for everyone. It also appears in audit logs and on the webhook test UI.
     */
    webhookHeaders?: pulumi.Input<pulumi.Input<inputs.WebhookWebhookHeader>[]>;
}

/**
 * The set of arguments for constructing a Webhook resource.
 */
export interface WebhookArgs {
    /**
     * The ID of the Config.
     */
    configId: pulumi.Input<string>;
    /**
     * The HTTP body content.
     */
    content?: pulumi.Input<string>;
    /**
     * The ID of the Environment.
     */
    environmentId: pulumi.Input<string>;
    /**
     * The HTTP method. Available values: `get`|`post`. Default: `get`
     */
    httpMethod?: pulumi.Input<string>;
    secureWebhookHeaders?: pulumi.Input<pulumi.Input<inputs.WebhookSecureWebhookHeader>[]>;
    /**
     * The URL of the Webhook.
     */
    url: pulumi.Input<string>;
    /**
     * List of plain text HTTP headers. The value of a plain text header is always visible for everyone. It also appears in audit logs and on the webhook test UI.
     */
    webhookHeaders?: pulumi.Input<pulumi.Input<inputs.WebhookWebhookHeader>[]>;
}
