// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to access information about existing **Organizations**. [What is an Organization in ConfigCat?](https://configcat.com/docs/main-concepts)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as configcat from "@pulumi/configcat";
 *
 * const myOrganizations = configcat.getOrganizations({
 *     nameFilterRegex: "ConfigCat",
 * });
 * export const organizationId = myOrganizations.then(myOrganizations => myOrganizations.organizations?.[0]?.organizationId);
 * ```
 */
export function getOrganizations(args?: GetOrganizationsArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("configcat:index/getOrganizations:getOrganizations", {
        "nameFilterRegex": args.nameFilterRegex,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrganizations.
 */
export interface GetOrganizationsArgs {
    /**
     * Filter the Organizations by name.
     */
    nameFilterRegex?: string;
}

/**
 * A collection of values returned by getOrganizations.
 */
export interface GetOrganizationsResult {
    /**
     * Internal ID of the data source. Do not use.
     */
    readonly id: string;
    /**
     * Filter the Organizations by name.
     */
    readonly nameFilterRegex?: string;
    readonly organizations: outputs.GetOrganizationsOrganization[];
}
/**
 * Use this data source to access information about existing **Organizations**. [What is an Organization in ConfigCat?](https://configcat.com/docs/main-concepts)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as configcat from "@pulumi/configcat";
 *
 * const myOrganizations = configcat.getOrganizations({
 *     nameFilterRegex: "ConfigCat",
 * });
 * export const organizationId = myOrganizations.then(myOrganizations => myOrganizations.organizations?.[0]?.organizationId);
 * ```
 */
export function getOrganizationsOutput(args?: GetOrganizationsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetOrganizationsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("configcat:index/getOrganizations:getOrganizations", {
        "nameFilterRegex": args.nameFilterRegex,
    }, opts);
}

/**
 * A collection of arguments for invoking getOrganizations.
 */
export interface GetOrganizationsOutputArgs {
    /**
     * Filter the Organizations by name.
     */
    nameFilterRegex?: pulumi.Input<string>;
}
