// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package configcat

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-configcat/sdk/go/configcat/internal"
)

// ## # getPermissionGroups Resource
//
// Use this data source to access information about existing **Permission Groups**. [What is a Permission Group in ConfigCat?](https://configcat.com/docs/advanced/team-management/team-management-basics/#permissions--permission-groups-product-level)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-configcat/sdk/go/configcat"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myProducts, err := configcat.GetProducts(ctx, &configcat.GetProductsArgs{
//				NameFilterRegex: pulumi.StringRef("ConfigCat's product"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			myPermissionGroups, err := configcat.GetPermissionGroups(ctx, &configcat.GetPermissionGroupsArgs{
//				ProductId:       myProducts.Products[0].ProductId,
//				NameFilterRegex: pulumi.StringRef("Administrators"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("permissionGroupId", myPermissionGroups.PermissionGroups[0].PermissionGroupId)
//			return nil
//		})
//	}
//
// ```
//
// ## Endpoints used
//
// - [List Permission Groups](https://api.configcat.com/docs/index.html#tag/Permission-Groups/operation/get-permission-groups)
func GetPermissionGroups(ctx *pulumi.Context, args *GetPermissionGroupsArgs, opts ...pulumi.InvokeOption) (*GetPermissionGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPermissionGroupsResult
	err := ctx.Invoke("configcat:index/getPermissionGroups:getPermissionGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPermissionGroups.
type GetPermissionGroupsArgs struct {
	// Filter the Permission Groups by name.
	NameFilterRegex *string `pulumi:"nameFilterRegex"`
	// The ID of the Product.
	ProductId string `pulumi:"productId"`
}

// A collection of values returned by getPermissionGroups.
type GetPermissionGroupsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id              string  `pulumi:"id"`
	NameFilterRegex *string `pulumi:"nameFilterRegex"`
	// A permission group list block defined as below.
	PermissionGroups []GetPermissionGroupsPermissionGroup `pulumi:"permissionGroups"`
	ProductId        string                               `pulumi:"productId"`
}

func GetPermissionGroupsOutput(ctx *pulumi.Context, args GetPermissionGroupsOutputArgs, opts ...pulumi.InvokeOption) GetPermissionGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPermissionGroupsResultOutput, error) {
			args := v.(GetPermissionGroupsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetPermissionGroupsResult
			secret, err := ctx.InvokePackageRaw("configcat:index/getPermissionGroups:getPermissionGroups", args, &rv, "", opts...)
			if err != nil {
				return GetPermissionGroupsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetPermissionGroupsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetPermissionGroupsResultOutput), nil
			}
			return output, nil
		}).(GetPermissionGroupsResultOutput)
}

// A collection of arguments for invoking getPermissionGroups.
type GetPermissionGroupsOutputArgs struct {
	// Filter the Permission Groups by name.
	NameFilterRegex pulumi.StringPtrInput `pulumi:"nameFilterRegex"`
	// The ID of the Product.
	ProductId pulumi.StringInput `pulumi:"productId"`
}

func (GetPermissionGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getPermissionGroups.
type GetPermissionGroupsResultOutput struct{ *pulumi.OutputState }

func (GetPermissionGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionGroupsResult)(nil)).Elem()
}

func (o GetPermissionGroupsResultOutput) ToGetPermissionGroupsResultOutput() GetPermissionGroupsResultOutput {
	return o
}

func (o GetPermissionGroupsResultOutput) ToGetPermissionGroupsResultOutputWithContext(ctx context.Context) GetPermissionGroupsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetPermissionGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPermissionGroupsResultOutput) NameFilterRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPermissionGroupsResult) *string { return v.NameFilterRegex }).(pulumi.StringPtrOutput)
}

// A permission group list block defined as below.
func (o GetPermissionGroupsResultOutput) PermissionGroups() GetPermissionGroupsPermissionGroupArrayOutput {
	return o.ApplyT(func(v GetPermissionGroupsResult) []GetPermissionGroupsPermissionGroup { return v.PermissionGroups }).(GetPermissionGroupsPermissionGroupArrayOutput)
}

func (o GetPermissionGroupsResultOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionGroupsResult) string { return v.ProductId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPermissionGroupsResultOutput{})
}
