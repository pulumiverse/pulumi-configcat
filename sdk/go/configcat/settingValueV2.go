// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package configcat

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-configcat/sdk/v5/go/configcat/internal"
)

// Initializes and updates **Feature Flag or Setting** values for V2 configs. [Read more about the anatomy of a Feature Flag or Setting.](https://configcat.com/docs/main-concepts)
//
// ## Import
//
// Feature Flag/Setting values (V2) can be imported using a combined EnvironmentID:SettingId ID.
//
// Get the EnvironmentId using e.g. the [List Environments API](https://api.configcat.com/docs/#tag/Environments/operation/get-environments).
//
// Get the SettingId using e.g. the [List Flags API](https://api.configcat.com/docs/#tag/Feature-Flags-and-Settings/operation/get-settings).
//
// ```sh
// $ pulumi import configcat:index/settingValueV2:SettingValueV2 example 08d86d63-2726-47cd-8bfc-59608ecb91e2:1234
// ```
type SettingValueV2 struct {
	pulumi.CustomResourceState

	// The ID of the Environment.
	EnvironmentId pulumi.StringOutput `pulumi:"environmentId"`
	InitOnly      pulumi.BoolOutput   `pulumi:"initOnly"`
	// If the Product's "Mandatory notes" preference is turned on for the Environment the Mandatory note must be passed.
	MandatoryNotes pulumi.StringPtrOutput `pulumi:"mandatoryNotes"`
	// The user attribute used for percentage evaluation. If not set, it defaults to the Identifier user object attribute.
	PercentageEvaluationAttribute pulumi.StringPtrOutput `pulumi:"percentageEvaluationAttribute"`
	// The ID of the Feature Flag or Setting.
	SettingId pulumi.StringOutput `pulumi:"settingId"`
	// The type of the Feature Flag or Setting. Available values: `boolean`|`string`|`int`|`double`.
	SettingType pulumi.StringOutput `pulumi:"settingType"`
	// The targeting rules of the Feature Flag or Setting
	TargetingRules SettingValueV2TargetingRuleArrayOutput `pulumi:"targetingRules"`
	// Represents the value of a Feature Flag or Setting.
	Value SettingValueV2ValueOutput `pulumi:"value"`
}

// NewSettingValueV2 registers a new resource with the given unique name, arguments, and options.
func NewSettingValueV2(ctx *pulumi.Context,
	name string, args *SettingValueV2Args, opts ...pulumi.ResourceOption) (*SettingValueV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnvironmentId == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentId'")
	}
	if args.SettingId == nil {
		return nil, errors.New("invalid value for required argument 'SettingId'")
	}
	if args.Value == nil {
		return nil, errors.New("invalid value for required argument 'Value'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SettingValueV2
	err := ctx.RegisterResource("configcat:index/settingValueV2:SettingValueV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSettingValueV2 gets an existing SettingValueV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSettingValueV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SettingValueV2State, opts ...pulumi.ResourceOption) (*SettingValueV2, error) {
	var resource SettingValueV2
	err := ctx.ReadResource("configcat:index/settingValueV2:SettingValueV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SettingValueV2 resources.
type settingValueV2State struct {
	// The ID of the Environment.
	EnvironmentId *string `pulumi:"environmentId"`
	InitOnly      *bool   `pulumi:"initOnly"`
	// If the Product's "Mandatory notes" preference is turned on for the Environment the Mandatory note must be passed.
	MandatoryNotes *string `pulumi:"mandatoryNotes"`
	// The user attribute used for percentage evaluation. If not set, it defaults to the Identifier user object attribute.
	PercentageEvaluationAttribute *string `pulumi:"percentageEvaluationAttribute"`
	// The ID of the Feature Flag or Setting.
	SettingId *string `pulumi:"settingId"`
	// The type of the Feature Flag or Setting. Available values: `boolean`|`string`|`int`|`double`.
	SettingType *string `pulumi:"settingType"`
	// The targeting rules of the Feature Flag or Setting
	TargetingRules []SettingValueV2TargetingRule `pulumi:"targetingRules"`
	// Represents the value of a Feature Flag or Setting.
	Value *SettingValueV2Value `pulumi:"value"`
}

type SettingValueV2State struct {
	// The ID of the Environment.
	EnvironmentId pulumi.StringPtrInput
	InitOnly      pulumi.BoolPtrInput
	// If the Product's "Mandatory notes" preference is turned on for the Environment the Mandatory note must be passed.
	MandatoryNotes pulumi.StringPtrInput
	// The user attribute used for percentage evaluation. If not set, it defaults to the Identifier user object attribute.
	PercentageEvaluationAttribute pulumi.StringPtrInput
	// The ID of the Feature Flag or Setting.
	SettingId pulumi.StringPtrInput
	// The type of the Feature Flag or Setting. Available values: `boolean`|`string`|`int`|`double`.
	SettingType pulumi.StringPtrInput
	// The targeting rules of the Feature Flag or Setting
	TargetingRules SettingValueV2TargetingRuleArrayInput
	// Represents the value of a Feature Flag or Setting.
	Value SettingValueV2ValuePtrInput
}

func (SettingValueV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*settingValueV2State)(nil)).Elem()
}

type settingValueV2Args struct {
	// The ID of the Environment.
	EnvironmentId string `pulumi:"environmentId"`
	InitOnly      *bool  `pulumi:"initOnly"`
	// If the Product's "Mandatory notes" preference is turned on for the Environment the Mandatory note must be passed.
	MandatoryNotes *string `pulumi:"mandatoryNotes"`
	// The user attribute used for percentage evaluation. If not set, it defaults to the Identifier user object attribute.
	PercentageEvaluationAttribute *string `pulumi:"percentageEvaluationAttribute"`
	// The ID of the Feature Flag or Setting.
	SettingId string `pulumi:"settingId"`
	// The targeting rules of the Feature Flag or Setting
	TargetingRules []SettingValueV2TargetingRule `pulumi:"targetingRules"`
	// Represents the value of a Feature Flag or Setting.
	Value SettingValueV2Value `pulumi:"value"`
}

// The set of arguments for constructing a SettingValueV2 resource.
type SettingValueV2Args struct {
	// The ID of the Environment.
	EnvironmentId pulumi.StringInput
	InitOnly      pulumi.BoolPtrInput
	// If the Product's "Mandatory notes" preference is turned on for the Environment the Mandatory note must be passed.
	MandatoryNotes pulumi.StringPtrInput
	// The user attribute used for percentage evaluation. If not set, it defaults to the Identifier user object attribute.
	PercentageEvaluationAttribute pulumi.StringPtrInput
	// The ID of the Feature Flag or Setting.
	SettingId pulumi.StringInput
	// The targeting rules of the Feature Flag or Setting
	TargetingRules SettingValueV2TargetingRuleArrayInput
	// Represents the value of a Feature Flag or Setting.
	Value SettingValueV2ValueInput
}

func (SettingValueV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*settingValueV2Args)(nil)).Elem()
}

type SettingValueV2Input interface {
	pulumi.Input

	ToSettingValueV2Output() SettingValueV2Output
	ToSettingValueV2OutputWithContext(ctx context.Context) SettingValueV2Output
}

func (*SettingValueV2) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingValueV2)(nil)).Elem()
}

func (i *SettingValueV2) ToSettingValueV2Output() SettingValueV2Output {
	return i.ToSettingValueV2OutputWithContext(context.Background())
}

func (i *SettingValueV2) ToSettingValueV2OutputWithContext(ctx context.Context) SettingValueV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(SettingValueV2Output)
}

// SettingValueV2ArrayInput is an input type that accepts SettingValueV2Array and SettingValueV2ArrayOutput values.
// You can construct a concrete instance of `SettingValueV2ArrayInput` via:
//
//	SettingValueV2Array{ SettingValueV2Args{...} }
type SettingValueV2ArrayInput interface {
	pulumi.Input

	ToSettingValueV2ArrayOutput() SettingValueV2ArrayOutput
	ToSettingValueV2ArrayOutputWithContext(context.Context) SettingValueV2ArrayOutput
}

type SettingValueV2Array []SettingValueV2Input

func (SettingValueV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SettingValueV2)(nil)).Elem()
}

func (i SettingValueV2Array) ToSettingValueV2ArrayOutput() SettingValueV2ArrayOutput {
	return i.ToSettingValueV2ArrayOutputWithContext(context.Background())
}

func (i SettingValueV2Array) ToSettingValueV2ArrayOutputWithContext(ctx context.Context) SettingValueV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingValueV2ArrayOutput)
}

// SettingValueV2MapInput is an input type that accepts SettingValueV2Map and SettingValueV2MapOutput values.
// You can construct a concrete instance of `SettingValueV2MapInput` via:
//
//	SettingValueV2Map{ "key": SettingValueV2Args{...} }
type SettingValueV2MapInput interface {
	pulumi.Input

	ToSettingValueV2MapOutput() SettingValueV2MapOutput
	ToSettingValueV2MapOutputWithContext(context.Context) SettingValueV2MapOutput
}

type SettingValueV2Map map[string]SettingValueV2Input

func (SettingValueV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SettingValueV2)(nil)).Elem()
}

func (i SettingValueV2Map) ToSettingValueV2MapOutput() SettingValueV2MapOutput {
	return i.ToSettingValueV2MapOutputWithContext(context.Background())
}

func (i SettingValueV2Map) ToSettingValueV2MapOutputWithContext(ctx context.Context) SettingValueV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingValueV2MapOutput)
}

type SettingValueV2Output struct{ *pulumi.OutputState }

func (SettingValueV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**SettingValueV2)(nil)).Elem()
}

func (o SettingValueV2Output) ToSettingValueV2Output() SettingValueV2Output {
	return o
}

func (o SettingValueV2Output) ToSettingValueV2OutputWithContext(ctx context.Context) SettingValueV2Output {
	return o
}

// The ID of the Environment.
func (o SettingValueV2Output) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *SettingValueV2) pulumi.StringOutput { return v.EnvironmentId }).(pulumi.StringOutput)
}

func (o SettingValueV2Output) InitOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v *SettingValueV2) pulumi.BoolOutput { return v.InitOnly }).(pulumi.BoolOutput)
}

// If the Product's "Mandatory notes" preference is turned on for the Environment the Mandatory note must be passed.
func (o SettingValueV2Output) MandatoryNotes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingValueV2) pulumi.StringPtrOutput { return v.MandatoryNotes }).(pulumi.StringPtrOutput)
}

// The user attribute used for percentage evaluation. If not set, it defaults to the Identifier user object attribute.
func (o SettingValueV2Output) PercentageEvaluationAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SettingValueV2) pulumi.StringPtrOutput { return v.PercentageEvaluationAttribute }).(pulumi.StringPtrOutput)
}

// The ID of the Feature Flag or Setting.
func (o SettingValueV2Output) SettingId() pulumi.StringOutput {
	return o.ApplyT(func(v *SettingValueV2) pulumi.StringOutput { return v.SettingId }).(pulumi.StringOutput)
}

// The type of the Feature Flag or Setting. Available values: `boolean`|`string`|`int`|`double`.
func (o SettingValueV2Output) SettingType() pulumi.StringOutput {
	return o.ApplyT(func(v *SettingValueV2) pulumi.StringOutput { return v.SettingType }).(pulumi.StringOutput)
}

// The targeting rules of the Feature Flag or Setting
func (o SettingValueV2Output) TargetingRules() SettingValueV2TargetingRuleArrayOutput {
	return o.ApplyT(func(v *SettingValueV2) SettingValueV2TargetingRuleArrayOutput { return v.TargetingRules }).(SettingValueV2TargetingRuleArrayOutput)
}

// Represents the value of a Feature Flag or Setting.
func (o SettingValueV2Output) Value() SettingValueV2ValueOutput {
	return o.ApplyT(func(v *SettingValueV2) SettingValueV2ValueOutput { return v.Value }).(SettingValueV2ValueOutput)
}

type SettingValueV2ArrayOutput struct{ *pulumi.OutputState }

func (SettingValueV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SettingValueV2)(nil)).Elem()
}

func (o SettingValueV2ArrayOutput) ToSettingValueV2ArrayOutput() SettingValueV2ArrayOutput {
	return o
}

func (o SettingValueV2ArrayOutput) ToSettingValueV2ArrayOutputWithContext(ctx context.Context) SettingValueV2ArrayOutput {
	return o
}

func (o SettingValueV2ArrayOutput) Index(i pulumi.IntInput) SettingValueV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SettingValueV2 {
		return vs[0].([]*SettingValueV2)[vs[1].(int)]
	}).(SettingValueV2Output)
}

type SettingValueV2MapOutput struct{ *pulumi.OutputState }

func (SettingValueV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SettingValueV2)(nil)).Elem()
}

func (o SettingValueV2MapOutput) ToSettingValueV2MapOutput() SettingValueV2MapOutput {
	return o
}

func (o SettingValueV2MapOutput) ToSettingValueV2MapOutputWithContext(ctx context.Context) SettingValueV2MapOutput {
	return o
}

func (o SettingValueV2MapOutput) MapIndex(k pulumi.StringInput) SettingValueV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SettingValueV2 {
		return vs[0].(map[string]*SettingValueV2)[vs[1].(string)]
	}).(SettingValueV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SettingValueV2Input)(nil)).Elem(), &SettingValueV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingValueV2ArrayInput)(nil)).Elem(), SettingValueV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingValueV2MapInput)(nil)).Elem(), SettingValueV2Map{})
	pulumi.RegisterOutputType(SettingValueV2Output{})
	pulumi.RegisterOutputType(SettingValueV2ArrayOutput{})
	pulumi.RegisterOutputType(SettingValueV2MapOutput{})
}
