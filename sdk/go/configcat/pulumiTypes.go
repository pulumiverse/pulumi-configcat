// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package configcat

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-configcat/sdk/go/configcat/internal"
)

var _ = internal.GetEnvOrDefault

type PermissionGroupEnvironmentAccess struct {
	// Represent the environment specific Feature Management permission. Possible values: full, readOnly, none. Default: none.
	EnvironmentAccesstype *string `pulumi:"environmentAccesstype"`
	// The unique [Environment](https://configcat.com/docs/main-concepts/#environment) ID.
	EnvironmentId string `pulumi:"environmentId"`
}

// PermissionGroupEnvironmentAccessInput is an input type that accepts PermissionGroupEnvironmentAccessArgs and PermissionGroupEnvironmentAccessOutput values.
// You can construct a concrete instance of `PermissionGroupEnvironmentAccessInput` via:
//
//	PermissionGroupEnvironmentAccessArgs{...}
type PermissionGroupEnvironmentAccessInput interface {
	pulumi.Input

	ToPermissionGroupEnvironmentAccessOutput() PermissionGroupEnvironmentAccessOutput
	ToPermissionGroupEnvironmentAccessOutputWithContext(context.Context) PermissionGroupEnvironmentAccessOutput
}

type PermissionGroupEnvironmentAccessArgs struct {
	// Represent the environment specific Feature Management permission. Possible values: full, readOnly, none. Default: none.
	EnvironmentAccesstype pulumi.StringPtrInput `pulumi:"environmentAccesstype"`
	// The unique [Environment](https://configcat.com/docs/main-concepts/#environment) ID.
	EnvironmentId pulumi.StringInput `pulumi:"environmentId"`
}

func (PermissionGroupEnvironmentAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionGroupEnvironmentAccess)(nil)).Elem()
}

func (i PermissionGroupEnvironmentAccessArgs) ToPermissionGroupEnvironmentAccessOutput() PermissionGroupEnvironmentAccessOutput {
	return i.ToPermissionGroupEnvironmentAccessOutputWithContext(context.Background())
}

func (i PermissionGroupEnvironmentAccessArgs) ToPermissionGroupEnvironmentAccessOutputWithContext(ctx context.Context) PermissionGroupEnvironmentAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionGroupEnvironmentAccessOutput)
}

// PermissionGroupEnvironmentAccessArrayInput is an input type that accepts PermissionGroupEnvironmentAccessArray and PermissionGroupEnvironmentAccessArrayOutput values.
// You can construct a concrete instance of `PermissionGroupEnvironmentAccessArrayInput` via:
//
//	PermissionGroupEnvironmentAccessArray{ PermissionGroupEnvironmentAccessArgs{...} }
type PermissionGroupEnvironmentAccessArrayInput interface {
	pulumi.Input

	ToPermissionGroupEnvironmentAccessArrayOutput() PermissionGroupEnvironmentAccessArrayOutput
	ToPermissionGroupEnvironmentAccessArrayOutputWithContext(context.Context) PermissionGroupEnvironmentAccessArrayOutput
}

type PermissionGroupEnvironmentAccessArray []PermissionGroupEnvironmentAccessInput

func (PermissionGroupEnvironmentAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PermissionGroupEnvironmentAccess)(nil)).Elem()
}

func (i PermissionGroupEnvironmentAccessArray) ToPermissionGroupEnvironmentAccessArrayOutput() PermissionGroupEnvironmentAccessArrayOutput {
	return i.ToPermissionGroupEnvironmentAccessArrayOutputWithContext(context.Background())
}

func (i PermissionGroupEnvironmentAccessArray) ToPermissionGroupEnvironmentAccessArrayOutputWithContext(ctx context.Context) PermissionGroupEnvironmentAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionGroupEnvironmentAccessArrayOutput)
}

type PermissionGroupEnvironmentAccessOutput struct{ *pulumi.OutputState }

func (PermissionGroupEnvironmentAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionGroupEnvironmentAccess)(nil)).Elem()
}

func (o PermissionGroupEnvironmentAccessOutput) ToPermissionGroupEnvironmentAccessOutput() PermissionGroupEnvironmentAccessOutput {
	return o
}

func (o PermissionGroupEnvironmentAccessOutput) ToPermissionGroupEnvironmentAccessOutputWithContext(ctx context.Context) PermissionGroupEnvironmentAccessOutput {
	return o
}

// Represent the environment specific Feature Management permission. Possible values: full, readOnly, none. Default: none.
func (o PermissionGroupEnvironmentAccessOutput) EnvironmentAccesstype() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionGroupEnvironmentAccess) *string { return v.EnvironmentAccesstype }).(pulumi.StringPtrOutput)
}

// The unique [Environment](https://configcat.com/docs/main-concepts/#environment) ID.
func (o PermissionGroupEnvironmentAccessOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v PermissionGroupEnvironmentAccess) string { return v.EnvironmentId }).(pulumi.StringOutput)
}

type PermissionGroupEnvironmentAccessArrayOutput struct{ *pulumi.OutputState }

func (PermissionGroupEnvironmentAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PermissionGroupEnvironmentAccess)(nil)).Elem()
}

func (o PermissionGroupEnvironmentAccessArrayOutput) ToPermissionGroupEnvironmentAccessArrayOutput() PermissionGroupEnvironmentAccessArrayOutput {
	return o
}

func (o PermissionGroupEnvironmentAccessArrayOutput) ToPermissionGroupEnvironmentAccessArrayOutputWithContext(ctx context.Context) PermissionGroupEnvironmentAccessArrayOutput {
	return o
}

func (o PermissionGroupEnvironmentAccessArrayOutput) Index(i pulumi.IntInput) PermissionGroupEnvironmentAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PermissionGroupEnvironmentAccess {
		return vs[0].([]PermissionGroupEnvironmentAccess)[vs[1].(int)]
	}).(PermissionGroupEnvironmentAccessOutput)
}

type SettingValuePercentageItem struct {
	// Any [number](https://configcat.com/docs/advanced/targeting/#-value) between 0 and 100 that represents a randomly allocated fraction of your users.
	Percentage string `pulumi:"percentage"`
	// The exact [value](https://configcat.com/docs/advanced/targeting/#served-value-1) that will be served to the users that fall into that fraction. Type: `string`. It must be compatible with the `settingType`.
	Value string `pulumi:"value"`
}

// SettingValuePercentageItemInput is an input type that accepts SettingValuePercentageItemArgs and SettingValuePercentageItemOutput values.
// You can construct a concrete instance of `SettingValuePercentageItemInput` via:
//
//	SettingValuePercentageItemArgs{...}
type SettingValuePercentageItemInput interface {
	pulumi.Input

	ToSettingValuePercentageItemOutput() SettingValuePercentageItemOutput
	ToSettingValuePercentageItemOutputWithContext(context.Context) SettingValuePercentageItemOutput
}

type SettingValuePercentageItemArgs struct {
	// Any [number](https://configcat.com/docs/advanced/targeting/#-value) between 0 and 100 that represents a randomly allocated fraction of your users.
	Percentage pulumi.StringInput `pulumi:"percentage"`
	// The exact [value](https://configcat.com/docs/advanced/targeting/#served-value-1) that will be served to the users that fall into that fraction. Type: `string`. It must be compatible with the `settingType`.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SettingValuePercentageItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingValuePercentageItem)(nil)).Elem()
}

func (i SettingValuePercentageItemArgs) ToSettingValuePercentageItemOutput() SettingValuePercentageItemOutput {
	return i.ToSettingValuePercentageItemOutputWithContext(context.Background())
}

func (i SettingValuePercentageItemArgs) ToSettingValuePercentageItemOutputWithContext(ctx context.Context) SettingValuePercentageItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingValuePercentageItemOutput)
}

// SettingValuePercentageItemArrayInput is an input type that accepts SettingValuePercentageItemArray and SettingValuePercentageItemArrayOutput values.
// You can construct a concrete instance of `SettingValuePercentageItemArrayInput` via:
//
//	SettingValuePercentageItemArray{ SettingValuePercentageItemArgs{...} }
type SettingValuePercentageItemArrayInput interface {
	pulumi.Input

	ToSettingValuePercentageItemArrayOutput() SettingValuePercentageItemArrayOutput
	ToSettingValuePercentageItemArrayOutputWithContext(context.Context) SettingValuePercentageItemArrayOutput
}

type SettingValuePercentageItemArray []SettingValuePercentageItemInput

func (SettingValuePercentageItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingValuePercentageItem)(nil)).Elem()
}

func (i SettingValuePercentageItemArray) ToSettingValuePercentageItemArrayOutput() SettingValuePercentageItemArrayOutput {
	return i.ToSettingValuePercentageItemArrayOutputWithContext(context.Background())
}

func (i SettingValuePercentageItemArray) ToSettingValuePercentageItemArrayOutputWithContext(ctx context.Context) SettingValuePercentageItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingValuePercentageItemArrayOutput)
}

type SettingValuePercentageItemOutput struct{ *pulumi.OutputState }

func (SettingValuePercentageItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingValuePercentageItem)(nil)).Elem()
}

func (o SettingValuePercentageItemOutput) ToSettingValuePercentageItemOutput() SettingValuePercentageItemOutput {
	return o
}

func (o SettingValuePercentageItemOutput) ToSettingValuePercentageItemOutputWithContext(ctx context.Context) SettingValuePercentageItemOutput {
	return o
}

// Any [number](https://configcat.com/docs/advanced/targeting/#-value) between 0 and 100 that represents a randomly allocated fraction of your users.
func (o SettingValuePercentageItemOutput) Percentage() pulumi.StringOutput {
	return o.ApplyT(func(v SettingValuePercentageItem) string { return v.Percentage }).(pulumi.StringOutput)
}

// The exact [value](https://configcat.com/docs/advanced/targeting/#served-value-1) that will be served to the users that fall into that fraction. Type: `string`. It must be compatible with the `settingType`.
func (o SettingValuePercentageItemOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SettingValuePercentageItem) string { return v.Value }).(pulumi.StringOutput)
}

type SettingValuePercentageItemArrayOutput struct{ *pulumi.OutputState }

func (SettingValuePercentageItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingValuePercentageItem)(nil)).Elem()
}

func (o SettingValuePercentageItemArrayOutput) ToSettingValuePercentageItemArrayOutput() SettingValuePercentageItemArrayOutput {
	return o
}

func (o SettingValuePercentageItemArrayOutput) ToSettingValuePercentageItemArrayOutputWithContext(ctx context.Context) SettingValuePercentageItemArrayOutput {
	return o
}

func (o SettingValuePercentageItemArrayOutput) Index(i pulumi.IntInput) SettingValuePercentageItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SettingValuePercentageItem {
		return vs[0].([]SettingValuePercentageItem)[vs[1].(int)]
	}).(SettingValuePercentageItemOutput)
}

type SettingValueRolloutRule struct {
	// The [comparator](https://configcat.com/docs/advanced/targeting/#comparator).
	Comparator *string `pulumi:"comparator"`
	// The [comparison attribute](https://configcat.com/docs/advanced/targeting/#attribute).
	ComparisonAttribute *string `pulumi:"comparisonAttribute"`
	// The [comparison value](https://configcat.com/docs/advanced/targeting/#comparison-value).
	ComparisonValue *string `pulumi:"comparisonValue"`
	// The segment_comparator. Possible values: isIn, isNotIn.
	SegmentComparator *string `pulumi:"segmentComparator"`
	// The [Segment's](https://configcat.com/docs/advanced/segments) unique identifier.
	SegmentId *string `pulumi:"segmentId"`
	// The exact [value](https://configcat.com/docs/advanced/targeting/#served-value) that will be served to the users who match the targeting rule. Type: `string`. It must be compatible with the `settingType`.
	Value string `pulumi:"value"`
}

// SettingValueRolloutRuleInput is an input type that accepts SettingValueRolloutRuleArgs and SettingValueRolloutRuleOutput values.
// You can construct a concrete instance of `SettingValueRolloutRuleInput` via:
//
//	SettingValueRolloutRuleArgs{...}
type SettingValueRolloutRuleInput interface {
	pulumi.Input

	ToSettingValueRolloutRuleOutput() SettingValueRolloutRuleOutput
	ToSettingValueRolloutRuleOutputWithContext(context.Context) SettingValueRolloutRuleOutput
}

type SettingValueRolloutRuleArgs struct {
	// The [comparator](https://configcat.com/docs/advanced/targeting/#comparator).
	Comparator pulumi.StringPtrInput `pulumi:"comparator"`
	// The [comparison attribute](https://configcat.com/docs/advanced/targeting/#attribute).
	ComparisonAttribute pulumi.StringPtrInput `pulumi:"comparisonAttribute"`
	// The [comparison value](https://configcat.com/docs/advanced/targeting/#comparison-value).
	ComparisonValue pulumi.StringPtrInput `pulumi:"comparisonValue"`
	// The segment_comparator. Possible values: isIn, isNotIn.
	SegmentComparator pulumi.StringPtrInput `pulumi:"segmentComparator"`
	// The [Segment's](https://configcat.com/docs/advanced/segments) unique identifier.
	SegmentId pulumi.StringPtrInput `pulumi:"segmentId"`
	// The exact [value](https://configcat.com/docs/advanced/targeting/#served-value) that will be served to the users who match the targeting rule. Type: `string`. It must be compatible with the `settingType`.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SettingValueRolloutRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingValueRolloutRule)(nil)).Elem()
}

func (i SettingValueRolloutRuleArgs) ToSettingValueRolloutRuleOutput() SettingValueRolloutRuleOutput {
	return i.ToSettingValueRolloutRuleOutputWithContext(context.Background())
}

func (i SettingValueRolloutRuleArgs) ToSettingValueRolloutRuleOutputWithContext(ctx context.Context) SettingValueRolloutRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingValueRolloutRuleOutput)
}

// SettingValueRolloutRuleArrayInput is an input type that accepts SettingValueRolloutRuleArray and SettingValueRolloutRuleArrayOutput values.
// You can construct a concrete instance of `SettingValueRolloutRuleArrayInput` via:
//
//	SettingValueRolloutRuleArray{ SettingValueRolloutRuleArgs{...} }
type SettingValueRolloutRuleArrayInput interface {
	pulumi.Input

	ToSettingValueRolloutRuleArrayOutput() SettingValueRolloutRuleArrayOutput
	ToSettingValueRolloutRuleArrayOutputWithContext(context.Context) SettingValueRolloutRuleArrayOutput
}

type SettingValueRolloutRuleArray []SettingValueRolloutRuleInput

func (SettingValueRolloutRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingValueRolloutRule)(nil)).Elem()
}

func (i SettingValueRolloutRuleArray) ToSettingValueRolloutRuleArrayOutput() SettingValueRolloutRuleArrayOutput {
	return i.ToSettingValueRolloutRuleArrayOutputWithContext(context.Background())
}

func (i SettingValueRolloutRuleArray) ToSettingValueRolloutRuleArrayOutputWithContext(ctx context.Context) SettingValueRolloutRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SettingValueRolloutRuleArrayOutput)
}

type SettingValueRolloutRuleOutput struct{ *pulumi.OutputState }

func (SettingValueRolloutRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SettingValueRolloutRule)(nil)).Elem()
}

func (o SettingValueRolloutRuleOutput) ToSettingValueRolloutRuleOutput() SettingValueRolloutRuleOutput {
	return o
}

func (o SettingValueRolloutRuleOutput) ToSettingValueRolloutRuleOutputWithContext(ctx context.Context) SettingValueRolloutRuleOutput {
	return o
}

// The [comparator](https://configcat.com/docs/advanced/targeting/#comparator).
func (o SettingValueRolloutRuleOutput) Comparator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingValueRolloutRule) *string { return v.Comparator }).(pulumi.StringPtrOutput)
}

// The [comparison attribute](https://configcat.com/docs/advanced/targeting/#attribute).
func (o SettingValueRolloutRuleOutput) ComparisonAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingValueRolloutRule) *string { return v.ComparisonAttribute }).(pulumi.StringPtrOutput)
}

// The [comparison value](https://configcat.com/docs/advanced/targeting/#comparison-value).
func (o SettingValueRolloutRuleOutput) ComparisonValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingValueRolloutRule) *string { return v.ComparisonValue }).(pulumi.StringPtrOutput)
}

// The segment_comparator. Possible values: isIn, isNotIn.
func (o SettingValueRolloutRuleOutput) SegmentComparator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingValueRolloutRule) *string { return v.SegmentComparator }).(pulumi.StringPtrOutput)
}

// The [Segment's](https://configcat.com/docs/advanced/segments) unique identifier.
func (o SettingValueRolloutRuleOutput) SegmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SettingValueRolloutRule) *string { return v.SegmentId }).(pulumi.StringPtrOutput)
}

// The exact [value](https://configcat.com/docs/advanced/targeting/#served-value) that will be served to the users who match the targeting rule. Type: `string`. It must be compatible with the `settingType`.
func (o SettingValueRolloutRuleOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SettingValueRolloutRule) string { return v.Value }).(pulumi.StringOutput)
}

type SettingValueRolloutRuleArrayOutput struct{ *pulumi.OutputState }

func (SettingValueRolloutRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SettingValueRolloutRule)(nil)).Elem()
}

func (o SettingValueRolloutRuleArrayOutput) ToSettingValueRolloutRuleArrayOutput() SettingValueRolloutRuleArrayOutput {
	return o
}

func (o SettingValueRolloutRuleArrayOutput) ToSettingValueRolloutRuleArrayOutputWithContext(ctx context.Context) SettingValueRolloutRuleArrayOutput {
	return o
}

func (o SettingValueRolloutRuleArrayOutput) Index(i pulumi.IntInput) SettingValueRolloutRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SettingValueRolloutRule {
		return vs[0].([]SettingValueRolloutRule)[vs[1].(int)]
	}).(SettingValueRolloutRuleOutput)
}

type GetConfigsConfig struct {
	// The unique Config ID.
	ConfigId string `pulumi:"configId"`
	// The description of the Config.
	Description string `pulumi:"description"`
	// The name of the Config.
	Name string `pulumi:"name"`
}

// GetConfigsConfigInput is an input type that accepts GetConfigsConfigArgs and GetConfigsConfigOutput values.
// You can construct a concrete instance of `GetConfigsConfigInput` via:
//
//	GetConfigsConfigArgs{...}
type GetConfigsConfigInput interface {
	pulumi.Input

	ToGetConfigsConfigOutput() GetConfigsConfigOutput
	ToGetConfigsConfigOutputWithContext(context.Context) GetConfigsConfigOutput
}

type GetConfigsConfigArgs struct {
	// The unique Config ID.
	ConfigId pulumi.StringInput `pulumi:"configId"`
	// The description of the Config.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the Config.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetConfigsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigsConfig)(nil)).Elem()
}

func (i GetConfigsConfigArgs) ToGetConfigsConfigOutput() GetConfigsConfigOutput {
	return i.ToGetConfigsConfigOutputWithContext(context.Background())
}

func (i GetConfigsConfigArgs) ToGetConfigsConfigOutputWithContext(ctx context.Context) GetConfigsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigsConfigOutput)
}

// GetConfigsConfigArrayInput is an input type that accepts GetConfigsConfigArray and GetConfigsConfigArrayOutput values.
// You can construct a concrete instance of `GetConfigsConfigArrayInput` via:
//
//	GetConfigsConfigArray{ GetConfigsConfigArgs{...} }
type GetConfigsConfigArrayInput interface {
	pulumi.Input

	ToGetConfigsConfigArrayOutput() GetConfigsConfigArrayOutput
	ToGetConfigsConfigArrayOutputWithContext(context.Context) GetConfigsConfigArrayOutput
}

type GetConfigsConfigArray []GetConfigsConfigInput

func (GetConfigsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigsConfig)(nil)).Elem()
}

func (i GetConfigsConfigArray) ToGetConfigsConfigArrayOutput() GetConfigsConfigArrayOutput {
	return i.ToGetConfigsConfigArrayOutputWithContext(context.Background())
}

func (i GetConfigsConfigArray) ToGetConfigsConfigArrayOutputWithContext(ctx context.Context) GetConfigsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigsConfigArrayOutput)
}

type GetConfigsConfigOutput struct{ *pulumi.OutputState }

func (GetConfigsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigsConfig)(nil)).Elem()
}

func (o GetConfigsConfigOutput) ToGetConfigsConfigOutput() GetConfigsConfigOutput {
	return o
}

func (o GetConfigsConfigOutput) ToGetConfigsConfigOutputWithContext(ctx context.Context) GetConfigsConfigOutput {
	return o
}

// The unique Config ID.
func (o GetConfigsConfigOutput) ConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfig) string { return v.ConfigId }).(pulumi.StringOutput)
}

// The description of the Config.
func (o GetConfigsConfigOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfig) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the Config.
func (o GetConfigsConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigsConfig) string { return v.Name }).(pulumi.StringOutput)
}

type GetConfigsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetConfigsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigsConfig)(nil)).Elem()
}

func (o GetConfigsConfigArrayOutput) ToGetConfigsConfigArrayOutput() GetConfigsConfigArrayOutput {
	return o
}

func (o GetConfigsConfigArrayOutput) ToGetConfigsConfigArrayOutputWithContext(ctx context.Context) GetConfigsConfigArrayOutput {
	return o
}

func (o GetConfigsConfigArrayOutput) Index(i pulumi.IntInput) GetConfigsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigsConfig {
		return vs[0].([]GetConfigsConfig)[vs[1].(int)]
	}).(GetConfigsConfigOutput)
}

type GetEnvironmentsEnvironment struct {
	// The color of the Environment.
	Color string `pulumi:"color"`
	// The description of the Environment.
	Description string `pulumi:"description"`
	// The unique Environment ID.
	EnvironmentId string `pulumi:"environmentId"`
	// The name of the Environment.
	Name string `pulumi:"name"`
}

// GetEnvironmentsEnvironmentInput is an input type that accepts GetEnvironmentsEnvironmentArgs and GetEnvironmentsEnvironmentOutput values.
// You can construct a concrete instance of `GetEnvironmentsEnvironmentInput` via:
//
//	GetEnvironmentsEnvironmentArgs{...}
type GetEnvironmentsEnvironmentInput interface {
	pulumi.Input

	ToGetEnvironmentsEnvironmentOutput() GetEnvironmentsEnvironmentOutput
	ToGetEnvironmentsEnvironmentOutputWithContext(context.Context) GetEnvironmentsEnvironmentOutput
}

type GetEnvironmentsEnvironmentArgs struct {
	// The color of the Environment.
	Color pulumi.StringInput `pulumi:"color"`
	// The description of the Environment.
	Description pulumi.StringInput `pulumi:"description"`
	// The unique Environment ID.
	EnvironmentId pulumi.StringInput `pulumi:"environmentId"`
	// The name of the Environment.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetEnvironmentsEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentsEnvironment)(nil)).Elem()
}

func (i GetEnvironmentsEnvironmentArgs) ToGetEnvironmentsEnvironmentOutput() GetEnvironmentsEnvironmentOutput {
	return i.ToGetEnvironmentsEnvironmentOutputWithContext(context.Background())
}

func (i GetEnvironmentsEnvironmentArgs) ToGetEnvironmentsEnvironmentOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentsEnvironmentOutput)
}

// GetEnvironmentsEnvironmentArrayInput is an input type that accepts GetEnvironmentsEnvironmentArray and GetEnvironmentsEnvironmentArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentsEnvironmentArrayInput` via:
//
//	GetEnvironmentsEnvironmentArray{ GetEnvironmentsEnvironmentArgs{...} }
type GetEnvironmentsEnvironmentArrayInput interface {
	pulumi.Input

	ToGetEnvironmentsEnvironmentArrayOutput() GetEnvironmentsEnvironmentArrayOutput
	ToGetEnvironmentsEnvironmentArrayOutputWithContext(context.Context) GetEnvironmentsEnvironmentArrayOutput
}

type GetEnvironmentsEnvironmentArray []GetEnvironmentsEnvironmentInput

func (GetEnvironmentsEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentsEnvironment)(nil)).Elem()
}

func (i GetEnvironmentsEnvironmentArray) ToGetEnvironmentsEnvironmentArrayOutput() GetEnvironmentsEnvironmentArrayOutput {
	return i.ToGetEnvironmentsEnvironmentArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentsEnvironmentArray) ToGetEnvironmentsEnvironmentArrayOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentsEnvironmentArrayOutput)
}

type GetEnvironmentsEnvironmentOutput struct{ *pulumi.OutputState }

func (GetEnvironmentsEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentsEnvironment)(nil)).Elem()
}

func (o GetEnvironmentsEnvironmentOutput) ToGetEnvironmentsEnvironmentOutput() GetEnvironmentsEnvironmentOutput {
	return o
}

func (o GetEnvironmentsEnvironmentOutput) ToGetEnvironmentsEnvironmentOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentOutput {
	return o
}

// The color of the Environment.
func (o GetEnvironmentsEnvironmentOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironment) string { return v.Color }).(pulumi.StringOutput)
}

// The description of the Environment.
func (o GetEnvironmentsEnvironmentOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironment) string { return v.Description }).(pulumi.StringOutput)
}

// The unique Environment ID.
func (o GetEnvironmentsEnvironmentOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironment) string { return v.EnvironmentId }).(pulumi.StringOutput)
}

// The name of the Environment.
func (o GetEnvironmentsEnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentsEnvironment) string { return v.Name }).(pulumi.StringOutput)
}

type GetEnvironmentsEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentsEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentsEnvironment)(nil)).Elem()
}

func (o GetEnvironmentsEnvironmentArrayOutput) ToGetEnvironmentsEnvironmentArrayOutput() GetEnvironmentsEnvironmentArrayOutput {
	return o
}

func (o GetEnvironmentsEnvironmentArrayOutput) ToGetEnvironmentsEnvironmentArrayOutputWithContext(ctx context.Context) GetEnvironmentsEnvironmentArrayOutput {
	return o
}

func (o GetEnvironmentsEnvironmentArrayOutput) Index(i pulumi.IntInput) GetEnvironmentsEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentsEnvironment {
		return vs[0].([]GetEnvironmentsEnvironment)[vs[1].(int)]
	}).(GetEnvironmentsEnvironmentOutput)
}

type GetOrganizationsOrganization struct {
	// The name of the Organization.
	Name string `pulumi:"name"`
	// The unique Organization ID.
	OrganizationId string `pulumi:"organizationId"`
}

// GetOrganizationsOrganizationInput is an input type that accepts GetOrganizationsOrganizationArgs and GetOrganizationsOrganizationOutput values.
// You can construct a concrete instance of `GetOrganizationsOrganizationInput` via:
//
//	GetOrganizationsOrganizationArgs{...}
type GetOrganizationsOrganizationInput interface {
	pulumi.Input

	ToGetOrganizationsOrganizationOutput() GetOrganizationsOrganizationOutput
	ToGetOrganizationsOrganizationOutputWithContext(context.Context) GetOrganizationsOrganizationOutput
}

type GetOrganizationsOrganizationArgs struct {
	// The name of the Organization.
	Name pulumi.StringInput `pulumi:"name"`
	// The unique Organization ID.
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
}

func (GetOrganizationsOrganizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsOrganization)(nil)).Elem()
}

func (i GetOrganizationsOrganizationArgs) ToGetOrganizationsOrganizationOutput() GetOrganizationsOrganizationOutput {
	return i.ToGetOrganizationsOrganizationOutputWithContext(context.Background())
}

func (i GetOrganizationsOrganizationArgs) ToGetOrganizationsOrganizationOutputWithContext(ctx context.Context) GetOrganizationsOrganizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationsOrganizationOutput)
}

// GetOrganizationsOrganizationArrayInput is an input type that accepts GetOrganizationsOrganizationArray and GetOrganizationsOrganizationArrayOutput values.
// You can construct a concrete instance of `GetOrganizationsOrganizationArrayInput` via:
//
//	GetOrganizationsOrganizationArray{ GetOrganizationsOrganizationArgs{...} }
type GetOrganizationsOrganizationArrayInput interface {
	pulumi.Input

	ToGetOrganizationsOrganizationArrayOutput() GetOrganizationsOrganizationArrayOutput
	ToGetOrganizationsOrganizationArrayOutputWithContext(context.Context) GetOrganizationsOrganizationArrayOutput
}

type GetOrganizationsOrganizationArray []GetOrganizationsOrganizationInput

func (GetOrganizationsOrganizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationsOrganization)(nil)).Elem()
}

func (i GetOrganizationsOrganizationArray) ToGetOrganizationsOrganizationArrayOutput() GetOrganizationsOrganizationArrayOutput {
	return i.ToGetOrganizationsOrganizationArrayOutputWithContext(context.Background())
}

func (i GetOrganizationsOrganizationArray) ToGetOrganizationsOrganizationArrayOutputWithContext(ctx context.Context) GetOrganizationsOrganizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationsOrganizationArrayOutput)
}

type GetOrganizationsOrganizationOutput struct{ *pulumi.OutputState }

func (GetOrganizationsOrganizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationsOrganization)(nil)).Elem()
}

func (o GetOrganizationsOrganizationOutput) ToGetOrganizationsOrganizationOutput() GetOrganizationsOrganizationOutput {
	return o
}

func (o GetOrganizationsOrganizationOutput) ToGetOrganizationsOrganizationOutputWithContext(ctx context.Context) GetOrganizationsOrganizationOutput {
	return o
}

// The name of the Organization.
func (o GetOrganizationsOrganizationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.Name }).(pulumi.StringOutput)
}

// The unique Organization ID.
func (o GetOrganizationsOrganizationOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationsOrganization) string { return v.OrganizationId }).(pulumi.StringOutput)
}

type GetOrganizationsOrganizationArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationsOrganizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationsOrganization)(nil)).Elem()
}

func (o GetOrganizationsOrganizationArrayOutput) ToGetOrganizationsOrganizationArrayOutput() GetOrganizationsOrganizationArrayOutput {
	return o
}

func (o GetOrganizationsOrganizationArrayOutput) ToGetOrganizationsOrganizationArrayOutputWithContext(ctx context.Context) GetOrganizationsOrganizationArrayOutput {
	return o
}

func (o GetOrganizationsOrganizationArrayOutput) Index(i pulumi.IntInput) GetOrganizationsOrganizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationsOrganization {
		return vs[0].([]GetOrganizationsOrganization)[vs[1].(int)]
	}).(GetOrganizationsOrganizationOutput)
}

type GetPermissionGroupsPermissionGroup struct {
	// Represent the Feature Management permission. Possible values: readOnly, full, custom
	Accesstype string `pulumi:"accesstype"`
	// Group members can create/update Configs.
	CanCreateorupdateConfig bool `pulumi:"canCreateorupdateConfig"`
	// Group members can create/update Environments.
	CanCreateorupdateEnvironment bool `pulumi:"canCreateorupdateEnvironment"`
	CanCreateorupdateSegment     bool `pulumi:"canCreateorupdateSegment"`
	// Group members can create/update Feature Flags and Settings.
	CanCreateorupdateSetting bool `pulumi:"canCreateorupdateSetting"`
	// Group members can create/update Tags.
	CanCreateorupdateTag bool `pulumi:"canCreateorupdateTag"`
	// Group members can delete Configs.
	CanDeleteConfig bool `pulumi:"canDeleteConfig"`
	// Group members can delete Environments.
	CanDeleteEnvironment bool `pulumi:"canDeleteEnvironment"`
	CanDeleteSegment     bool `pulumi:"canDeleteSegment"`
	// Group members can delete Feature Flags and Settings.
	CanDeleteSetting bool `pulumi:"canDeleteSetting"`
	// Group members can delete Tags.
	CanDeleteTag bool `pulumi:"canDeleteTag"`
	// Group members can add and configure integrations.
	CanManageIntegrations bool `pulumi:"canManageIntegrations"`
	// Group members can manage team members.
	CanManageMembers bool `pulumi:"canManageMembers"`
	// Group members can update Product preferences.
	CanManageProductPreferences bool `pulumi:"canManageProductPreferences"`
	// Group members can create/update/delete Webhooks.
	CanManageWebhook bool `pulumi:"canManageWebhook"`
	// Group members can rotate SDK keys.
	CanRotateSdkkey bool `pulumi:"canRotateSdkkey"`
	// Group members can attach/detach Tags to Feature Flags and Settings.
	CanTagSetting bool `pulumi:"canTagSetting"`
	// Group members can use the export/import feature.
	CanUseExportimport bool `pulumi:"canUseExportimport"`
	// Group members has access to audit logs.
	CanViewProductAuditlog bool `pulumi:"canViewProductAuditlog"`
	// Group members has access to product statistics.
	CanViewProductStatistics bool `pulumi:"canViewProductStatistics"`
	// Group members has access to SDK keys.
	CanViewSdkkey bool `pulumi:"canViewSdkkey"`
	// The environment specific permissions list block defined as below.
	EnvironmentAccesses []GetPermissionGroupsPermissionGroupEnvironmentAccess `pulumi:"environmentAccesses"`
	// The name of the Permission Group.
	Name string `pulumi:"name"`
	// Represent the environment specific Feature Management permission for new Environments. Possible values: full, readOnly, none
	NewEnvironmentAccesstype string `pulumi:"newEnvironmentAccesstype"`
	// The unique Permission Groups ID.
	PermissionGroupId int `pulumi:"permissionGroupId"`
}

// GetPermissionGroupsPermissionGroupInput is an input type that accepts GetPermissionGroupsPermissionGroupArgs and GetPermissionGroupsPermissionGroupOutput values.
// You can construct a concrete instance of `GetPermissionGroupsPermissionGroupInput` via:
//
//	GetPermissionGroupsPermissionGroupArgs{...}
type GetPermissionGroupsPermissionGroupInput interface {
	pulumi.Input

	ToGetPermissionGroupsPermissionGroupOutput() GetPermissionGroupsPermissionGroupOutput
	ToGetPermissionGroupsPermissionGroupOutputWithContext(context.Context) GetPermissionGroupsPermissionGroupOutput
}

type GetPermissionGroupsPermissionGroupArgs struct {
	// Represent the Feature Management permission. Possible values: readOnly, full, custom
	Accesstype pulumi.StringInput `pulumi:"accesstype"`
	// Group members can create/update Configs.
	CanCreateorupdateConfig pulumi.BoolInput `pulumi:"canCreateorupdateConfig"`
	// Group members can create/update Environments.
	CanCreateorupdateEnvironment pulumi.BoolInput `pulumi:"canCreateorupdateEnvironment"`
	CanCreateorupdateSegment     pulumi.BoolInput `pulumi:"canCreateorupdateSegment"`
	// Group members can create/update Feature Flags and Settings.
	CanCreateorupdateSetting pulumi.BoolInput `pulumi:"canCreateorupdateSetting"`
	// Group members can create/update Tags.
	CanCreateorupdateTag pulumi.BoolInput `pulumi:"canCreateorupdateTag"`
	// Group members can delete Configs.
	CanDeleteConfig pulumi.BoolInput `pulumi:"canDeleteConfig"`
	// Group members can delete Environments.
	CanDeleteEnvironment pulumi.BoolInput `pulumi:"canDeleteEnvironment"`
	CanDeleteSegment     pulumi.BoolInput `pulumi:"canDeleteSegment"`
	// Group members can delete Feature Flags and Settings.
	CanDeleteSetting pulumi.BoolInput `pulumi:"canDeleteSetting"`
	// Group members can delete Tags.
	CanDeleteTag pulumi.BoolInput `pulumi:"canDeleteTag"`
	// Group members can add and configure integrations.
	CanManageIntegrations pulumi.BoolInput `pulumi:"canManageIntegrations"`
	// Group members can manage team members.
	CanManageMembers pulumi.BoolInput `pulumi:"canManageMembers"`
	// Group members can update Product preferences.
	CanManageProductPreferences pulumi.BoolInput `pulumi:"canManageProductPreferences"`
	// Group members can create/update/delete Webhooks.
	CanManageWebhook pulumi.BoolInput `pulumi:"canManageWebhook"`
	// Group members can rotate SDK keys.
	CanRotateSdkkey pulumi.BoolInput `pulumi:"canRotateSdkkey"`
	// Group members can attach/detach Tags to Feature Flags and Settings.
	CanTagSetting pulumi.BoolInput `pulumi:"canTagSetting"`
	// Group members can use the export/import feature.
	CanUseExportimport pulumi.BoolInput `pulumi:"canUseExportimport"`
	// Group members has access to audit logs.
	CanViewProductAuditlog pulumi.BoolInput `pulumi:"canViewProductAuditlog"`
	// Group members has access to product statistics.
	CanViewProductStatistics pulumi.BoolInput `pulumi:"canViewProductStatistics"`
	// Group members has access to SDK keys.
	CanViewSdkkey pulumi.BoolInput `pulumi:"canViewSdkkey"`
	// The environment specific permissions list block defined as below.
	EnvironmentAccesses GetPermissionGroupsPermissionGroupEnvironmentAccessArrayInput `pulumi:"environmentAccesses"`
	// The name of the Permission Group.
	Name pulumi.StringInput `pulumi:"name"`
	// Represent the environment specific Feature Management permission for new Environments. Possible values: full, readOnly, none
	NewEnvironmentAccesstype pulumi.StringInput `pulumi:"newEnvironmentAccesstype"`
	// The unique Permission Groups ID.
	PermissionGroupId pulumi.IntInput `pulumi:"permissionGroupId"`
}

func (GetPermissionGroupsPermissionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionGroupsPermissionGroup)(nil)).Elem()
}

func (i GetPermissionGroupsPermissionGroupArgs) ToGetPermissionGroupsPermissionGroupOutput() GetPermissionGroupsPermissionGroupOutput {
	return i.ToGetPermissionGroupsPermissionGroupOutputWithContext(context.Background())
}

func (i GetPermissionGroupsPermissionGroupArgs) ToGetPermissionGroupsPermissionGroupOutputWithContext(ctx context.Context) GetPermissionGroupsPermissionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPermissionGroupsPermissionGroupOutput)
}

// GetPermissionGroupsPermissionGroupArrayInput is an input type that accepts GetPermissionGroupsPermissionGroupArray and GetPermissionGroupsPermissionGroupArrayOutput values.
// You can construct a concrete instance of `GetPermissionGroupsPermissionGroupArrayInput` via:
//
//	GetPermissionGroupsPermissionGroupArray{ GetPermissionGroupsPermissionGroupArgs{...} }
type GetPermissionGroupsPermissionGroupArrayInput interface {
	pulumi.Input

	ToGetPermissionGroupsPermissionGroupArrayOutput() GetPermissionGroupsPermissionGroupArrayOutput
	ToGetPermissionGroupsPermissionGroupArrayOutputWithContext(context.Context) GetPermissionGroupsPermissionGroupArrayOutput
}

type GetPermissionGroupsPermissionGroupArray []GetPermissionGroupsPermissionGroupInput

func (GetPermissionGroupsPermissionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPermissionGroupsPermissionGroup)(nil)).Elem()
}

func (i GetPermissionGroupsPermissionGroupArray) ToGetPermissionGroupsPermissionGroupArrayOutput() GetPermissionGroupsPermissionGroupArrayOutput {
	return i.ToGetPermissionGroupsPermissionGroupArrayOutputWithContext(context.Background())
}

func (i GetPermissionGroupsPermissionGroupArray) ToGetPermissionGroupsPermissionGroupArrayOutputWithContext(ctx context.Context) GetPermissionGroupsPermissionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPermissionGroupsPermissionGroupArrayOutput)
}

type GetPermissionGroupsPermissionGroupOutput struct{ *pulumi.OutputState }

func (GetPermissionGroupsPermissionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionGroupsPermissionGroup)(nil)).Elem()
}

func (o GetPermissionGroupsPermissionGroupOutput) ToGetPermissionGroupsPermissionGroupOutput() GetPermissionGroupsPermissionGroupOutput {
	return o
}

func (o GetPermissionGroupsPermissionGroupOutput) ToGetPermissionGroupsPermissionGroupOutputWithContext(ctx context.Context) GetPermissionGroupsPermissionGroupOutput {
	return o
}

// Represent the Feature Management permission. Possible values: readOnly, full, custom
func (o GetPermissionGroupsPermissionGroupOutput) Accesstype() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) string { return v.Accesstype }).(pulumi.StringOutput)
}

// Group members can create/update Configs.
func (o GetPermissionGroupsPermissionGroupOutput) CanCreateorupdateConfig() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) bool { return v.CanCreateorupdateConfig }).(pulumi.BoolOutput)
}

// Group members can create/update Environments.
func (o GetPermissionGroupsPermissionGroupOutput) CanCreateorupdateEnvironment() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) bool { return v.CanCreateorupdateEnvironment }).(pulumi.BoolOutput)
}

func (o GetPermissionGroupsPermissionGroupOutput) CanCreateorupdateSegment() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) bool { return v.CanCreateorupdateSegment }).(pulumi.BoolOutput)
}

// Group members can create/update Feature Flags and Settings.
func (o GetPermissionGroupsPermissionGroupOutput) CanCreateorupdateSetting() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) bool { return v.CanCreateorupdateSetting }).(pulumi.BoolOutput)
}

// Group members can create/update Tags.
func (o GetPermissionGroupsPermissionGroupOutput) CanCreateorupdateTag() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) bool { return v.CanCreateorupdateTag }).(pulumi.BoolOutput)
}

// Group members can delete Configs.
func (o GetPermissionGroupsPermissionGroupOutput) CanDeleteConfig() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) bool { return v.CanDeleteConfig }).(pulumi.BoolOutput)
}

// Group members can delete Environments.
func (o GetPermissionGroupsPermissionGroupOutput) CanDeleteEnvironment() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) bool { return v.CanDeleteEnvironment }).(pulumi.BoolOutput)
}

func (o GetPermissionGroupsPermissionGroupOutput) CanDeleteSegment() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) bool { return v.CanDeleteSegment }).(pulumi.BoolOutput)
}

// Group members can delete Feature Flags and Settings.
func (o GetPermissionGroupsPermissionGroupOutput) CanDeleteSetting() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) bool { return v.CanDeleteSetting }).(pulumi.BoolOutput)
}

// Group members can delete Tags.
func (o GetPermissionGroupsPermissionGroupOutput) CanDeleteTag() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) bool { return v.CanDeleteTag }).(pulumi.BoolOutput)
}

// Group members can add and configure integrations.
func (o GetPermissionGroupsPermissionGroupOutput) CanManageIntegrations() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) bool { return v.CanManageIntegrations }).(pulumi.BoolOutput)
}

// Group members can manage team members.
func (o GetPermissionGroupsPermissionGroupOutput) CanManageMembers() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) bool { return v.CanManageMembers }).(pulumi.BoolOutput)
}

// Group members can update Product preferences.
func (o GetPermissionGroupsPermissionGroupOutput) CanManageProductPreferences() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) bool { return v.CanManageProductPreferences }).(pulumi.BoolOutput)
}

// Group members can create/update/delete Webhooks.
func (o GetPermissionGroupsPermissionGroupOutput) CanManageWebhook() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) bool { return v.CanManageWebhook }).(pulumi.BoolOutput)
}

// Group members can rotate SDK keys.
func (o GetPermissionGroupsPermissionGroupOutput) CanRotateSdkkey() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) bool { return v.CanRotateSdkkey }).(pulumi.BoolOutput)
}

// Group members can attach/detach Tags to Feature Flags and Settings.
func (o GetPermissionGroupsPermissionGroupOutput) CanTagSetting() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) bool { return v.CanTagSetting }).(pulumi.BoolOutput)
}

// Group members can use the export/import feature.
func (o GetPermissionGroupsPermissionGroupOutput) CanUseExportimport() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) bool { return v.CanUseExportimport }).(pulumi.BoolOutput)
}

// Group members has access to audit logs.
func (o GetPermissionGroupsPermissionGroupOutput) CanViewProductAuditlog() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) bool { return v.CanViewProductAuditlog }).(pulumi.BoolOutput)
}

// Group members has access to product statistics.
func (o GetPermissionGroupsPermissionGroupOutput) CanViewProductStatistics() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) bool { return v.CanViewProductStatistics }).(pulumi.BoolOutput)
}

// Group members has access to SDK keys.
func (o GetPermissionGroupsPermissionGroupOutput) CanViewSdkkey() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) bool { return v.CanViewSdkkey }).(pulumi.BoolOutput)
}

// The environment specific permissions list block defined as below.
func (o GetPermissionGroupsPermissionGroupOutput) EnvironmentAccesses() GetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) []GetPermissionGroupsPermissionGroupEnvironmentAccess {
		return v.EnvironmentAccesses
	}).(GetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutput)
}

// The name of the Permission Group.
func (o GetPermissionGroupsPermissionGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) string { return v.Name }).(pulumi.StringOutput)
}

// Represent the environment specific Feature Management permission for new Environments. Possible values: full, readOnly, none
func (o GetPermissionGroupsPermissionGroupOutput) NewEnvironmentAccesstype() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) string { return v.NewEnvironmentAccesstype }).(pulumi.StringOutput)
}

// The unique Permission Groups ID.
func (o GetPermissionGroupsPermissionGroupOutput) PermissionGroupId() pulumi.IntOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroup) int { return v.PermissionGroupId }).(pulumi.IntOutput)
}

type GetPermissionGroupsPermissionGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPermissionGroupsPermissionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPermissionGroupsPermissionGroup)(nil)).Elem()
}

func (o GetPermissionGroupsPermissionGroupArrayOutput) ToGetPermissionGroupsPermissionGroupArrayOutput() GetPermissionGroupsPermissionGroupArrayOutput {
	return o
}

func (o GetPermissionGroupsPermissionGroupArrayOutput) ToGetPermissionGroupsPermissionGroupArrayOutputWithContext(ctx context.Context) GetPermissionGroupsPermissionGroupArrayOutput {
	return o
}

func (o GetPermissionGroupsPermissionGroupArrayOutput) Index(i pulumi.IntInput) GetPermissionGroupsPermissionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPermissionGroupsPermissionGroup {
		return vs[0].([]GetPermissionGroupsPermissionGroup)[vs[1].(int)]
	}).(GetPermissionGroupsPermissionGroupOutput)
}

type GetPermissionGroupsPermissionGroupEnvironmentAccess struct {
	// Represent the environment specific Feature Management permission. Possible values: full, readOnly, none
	EnvironmentAccesstype string `pulumi:"environmentAccesstype"`
	// The unique [Environment](https://configcat.com/docs/main-concepts/#environment) ID.
	EnvironmentId string `pulumi:"environmentId"`
}

// GetPermissionGroupsPermissionGroupEnvironmentAccessInput is an input type that accepts GetPermissionGroupsPermissionGroupEnvironmentAccessArgs and GetPermissionGroupsPermissionGroupEnvironmentAccessOutput values.
// You can construct a concrete instance of `GetPermissionGroupsPermissionGroupEnvironmentAccessInput` via:
//
//	GetPermissionGroupsPermissionGroupEnvironmentAccessArgs{...}
type GetPermissionGroupsPermissionGroupEnvironmentAccessInput interface {
	pulumi.Input

	ToGetPermissionGroupsPermissionGroupEnvironmentAccessOutput() GetPermissionGroupsPermissionGroupEnvironmentAccessOutput
	ToGetPermissionGroupsPermissionGroupEnvironmentAccessOutputWithContext(context.Context) GetPermissionGroupsPermissionGroupEnvironmentAccessOutput
}

type GetPermissionGroupsPermissionGroupEnvironmentAccessArgs struct {
	// Represent the environment specific Feature Management permission. Possible values: full, readOnly, none
	EnvironmentAccesstype pulumi.StringInput `pulumi:"environmentAccesstype"`
	// The unique [Environment](https://configcat.com/docs/main-concepts/#environment) ID.
	EnvironmentId pulumi.StringInput `pulumi:"environmentId"`
}

func (GetPermissionGroupsPermissionGroupEnvironmentAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionGroupsPermissionGroupEnvironmentAccess)(nil)).Elem()
}

func (i GetPermissionGroupsPermissionGroupEnvironmentAccessArgs) ToGetPermissionGroupsPermissionGroupEnvironmentAccessOutput() GetPermissionGroupsPermissionGroupEnvironmentAccessOutput {
	return i.ToGetPermissionGroupsPermissionGroupEnvironmentAccessOutputWithContext(context.Background())
}

func (i GetPermissionGroupsPermissionGroupEnvironmentAccessArgs) ToGetPermissionGroupsPermissionGroupEnvironmentAccessOutputWithContext(ctx context.Context) GetPermissionGroupsPermissionGroupEnvironmentAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPermissionGroupsPermissionGroupEnvironmentAccessOutput)
}

// GetPermissionGroupsPermissionGroupEnvironmentAccessArrayInput is an input type that accepts GetPermissionGroupsPermissionGroupEnvironmentAccessArray and GetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutput values.
// You can construct a concrete instance of `GetPermissionGroupsPermissionGroupEnvironmentAccessArrayInput` via:
//
//	GetPermissionGroupsPermissionGroupEnvironmentAccessArray{ GetPermissionGroupsPermissionGroupEnvironmentAccessArgs{...} }
type GetPermissionGroupsPermissionGroupEnvironmentAccessArrayInput interface {
	pulumi.Input

	ToGetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutput() GetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutput
	ToGetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutputWithContext(context.Context) GetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutput
}

type GetPermissionGroupsPermissionGroupEnvironmentAccessArray []GetPermissionGroupsPermissionGroupEnvironmentAccessInput

func (GetPermissionGroupsPermissionGroupEnvironmentAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPermissionGroupsPermissionGroupEnvironmentAccess)(nil)).Elem()
}

func (i GetPermissionGroupsPermissionGroupEnvironmentAccessArray) ToGetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutput() GetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutput {
	return i.ToGetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutputWithContext(context.Background())
}

func (i GetPermissionGroupsPermissionGroupEnvironmentAccessArray) ToGetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutputWithContext(ctx context.Context) GetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutput)
}

type GetPermissionGroupsPermissionGroupEnvironmentAccessOutput struct{ *pulumi.OutputState }

func (GetPermissionGroupsPermissionGroupEnvironmentAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionGroupsPermissionGroupEnvironmentAccess)(nil)).Elem()
}

func (o GetPermissionGroupsPermissionGroupEnvironmentAccessOutput) ToGetPermissionGroupsPermissionGroupEnvironmentAccessOutput() GetPermissionGroupsPermissionGroupEnvironmentAccessOutput {
	return o
}

func (o GetPermissionGroupsPermissionGroupEnvironmentAccessOutput) ToGetPermissionGroupsPermissionGroupEnvironmentAccessOutputWithContext(ctx context.Context) GetPermissionGroupsPermissionGroupEnvironmentAccessOutput {
	return o
}

// Represent the environment specific Feature Management permission. Possible values: full, readOnly, none
func (o GetPermissionGroupsPermissionGroupEnvironmentAccessOutput) EnvironmentAccesstype() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroupEnvironmentAccess) string { return v.EnvironmentAccesstype }).(pulumi.StringOutput)
}

// The unique [Environment](https://configcat.com/docs/main-concepts/#environment) ID.
func (o GetPermissionGroupsPermissionGroupEnvironmentAccessOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionGroupsPermissionGroupEnvironmentAccess) string { return v.EnvironmentId }).(pulumi.StringOutput)
}

type GetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutput struct{ *pulumi.OutputState }

func (GetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPermissionGroupsPermissionGroupEnvironmentAccess)(nil)).Elem()
}

func (o GetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutput) ToGetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutput() GetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutput {
	return o
}

func (o GetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutput) ToGetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutputWithContext(ctx context.Context) GetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutput {
	return o
}

func (o GetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutput) Index(i pulumi.IntInput) GetPermissionGroupsPermissionGroupEnvironmentAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPermissionGroupsPermissionGroupEnvironmentAccess {
		return vs[0].([]GetPermissionGroupsPermissionGroupEnvironmentAccess)[vs[1].(int)]
	}).(GetPermissionGroupsPermissionGroupEnvironmentAccessOutput)
}

type GetProductsProduct struct {
	// The description of the Product.
	Description string `pulumi:"description"`
	// The name of the Product.
	Name string `pulumi:"name"`
	// The unique Product ID.
	ProductId string `pulumi:"productId"`
}

// GetProductsProductInput is an input type that accepts GetProductsProductArgs and GetProductsProductOutput values.
// You can construct a concrete instance of `GetProductsProductInput` via:
//
//	GetProductsProductArgs{...}
type GetProductsProductInput interface {
	pulumi.Input

	ToGetProductsProductOutput() GetProductsProductOutput
	ToGetProductsProductOutputWithContext(context.Context) GetProductsProductOutput
}

type GetProductsProductArgs struct {
	// The description of the Product.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the Product.
	Name pulumi.StringInput `pulumi:"name"`
	// The unique Product ID.
	ProductId pulumi.StringInput `pulumi:"productId"`
}

func (GetProductsProductArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductsProduct)(nil)).Elem()
}

func (i GetProductsProductArgs) ToGetProductsProductOutput() GetProductsProductOutput {
	return i.ToGetProductsProductOutputWithContext(context.Background())
}

func (i GetProductsProductArgs) ToGetProductsProductOutputWithContext(ctx context.Context) GetProductsProductOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductsProductOutput)
}

// GetProductsProductArrayInput is an input type that accepts GetProductsProductArray and GetProductsProductArrayOutput values.
// You can construct a concrete instance of `GetProductsProductArrayInput` via:
//
//	GetProductsProductArray{ GetProductsProductArgs{...} }
type GetProductsProductArrayInput interface {
	pulumi.Input

	ToGetProductsProductArrayOutput() GetProductsProductArrayOutput
	ToGetProductsProductArrayOutputWithContext(context.Context) GetProductsProductArrayOutput
}

type GetProductsProductArray []GetProductsProductInput

func (GetProductsProductArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductsProduct)(nil)).Elem()
}

func (i GetProductsProductArray) ToGetProductsProductArrayOutput() GetProductsProductArrayOutput {
	return i.ToGetProductsProductArrayOutputWithContext(context.Background())
}

func (i GetProductsProductArray) ToGetProductsProductArrayOutputWithContext(ctx context.Context) GetProductsProductArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductsProductArrayOutput)
}

type GetProductsProductOutput struct{ *pulumi.OutputState }

func (GetProductsProductOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductsProduct)(nil)).Elem()
}

func (o GetProductsProductOutput) ToGetProductsProductOutput() GetProductsProductOutput {
	return o
}

func (o GetProductsProductOutput) ToGetProductsProductOutputWithContext(ctx context.Context) GetProductsProductOutput {
	return o
}

// The description of the Product.
func (o GetProductsProductOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsProduct) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the Product.
func (o GetProductsProductOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsProduct) string { return v.Name }).(pulumi.StringOutput)
}

// The unique Product ID.
func (o GetProductsProductOutput) ProductId() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsProduct) string { return v.ProductId }).(pulumi.StringOutput)
}

type GetProductsProductArrayOutput struct{ *pulumi.OutputState }

func (GetProductsProductArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductsProduct)(nil)).Elem()
}

func (o GetProductsProductArrayOutput) ToGetProductsProductArrayOutput() GetProductsProductArrayOutput {
	return o
}

func (o GetProductsProductArrayOutput) ToGetProductsProductArrayOutputWithContext(ctx context.Context) GetProductsProductArrayOutput {
	return o
}

func (o GetProductsProductArrayOutput) Index(i pulumi.IntInput) GetProductsProductOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProductsProduct {
		return vs[0].([]GetProductsProduct)[vs[1].(int)]
	}).(GetProductsProductOutput)
}

type GetSegmentsSegment struct {
	// The description of the Segment.
	Description string `pulumi:"description"`
	// The name of the Segment.
	Name string `pulumi:"name"`
	// The unique Segment ID.
	SegmentId string `pulumi:"segmentId"`
}

// GetSegmentsSegmentInput is an input type that accepts GetSegmentsSegmentArgs and GetSegmentsSegmentOutput values.
// You can construct a concrete instance of `GetSegmentsSegmentInput` via:
//
//	GetSegmentsSegmentArgs{...}
type GetSegmentsSegmentInput interface {
	pulumi.Input

	ToGetSegmentsSegmentOutput() GetSegmentsSegmentOutput
	ToGetSegmentsSegmentOutputWithContext(context.Context) GetSegmentsSegmentOutput
}

type GetSegmentsSegmentArgs struct {
	// The description of the Segment.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the Segment.
	Name pulumi.StringInput `pulumi:"name"`
	// The unique Segment ID.
	SegmentId pulumi.StringInput `pulumi:"segmentId"`
}

func (GetSegmentsSegmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSegmentsSegment)(nil)).Elem()
}

func (i GetSegmentsSegmentArgs) ToGetSegmentsSegmentOutput() GetSegmentsSegmentOutput {
	return i.ToGetSegmentsSegmentOutputWithContext(context.Background())
}

func (i GetSegmentsSegmentArgs) ToGetSegmentsSegmentOutputWithContext(ctx context.Context) GetSegmentsSegmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSegmentsSegmentOutput)
}

// GetSegmentsSegmentArrayInput is an input type that accepts GetSegmentsSegmentArray and GetSegmentsSegmentArrayOutput values.
// You can construct a concrete instance of `GetSegmentsSegmentArrayInput` via:
//
//	GetSegmentsSegmentArray{ GetSegmentsSegmentArgs{...} }
type GetSegmentsSegmentArrayInput interface {
	pulumi.Input

	ToGetSegmentsSegmentArrayOutput() GetSegmentsSegmentArrayOutput
	ToGetSegmentsSegmentArrayOutputWithContext(context.Context) GetSegmentsSegmentArrayOutput
}

type GetSegmentsSegmentArray []GetSegmentsSegmentInput

func (GetSegmentsSegmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSegmentsSegment)(nil)).Elem()
}

func (i GetSegmentsSegmentArray) ToGetSegmentsSegmentArrayOutput() GetSegmentsSegmentArrayOutput {
	return i.ToGetSegmentsSegmentArrayOutputWithContext(context.Background())
}

func (i GetSegmentsSegmentArray) ToGetSegmentsSegmentArrayOutputWithContext(ctx context.Context) GetSegmentsSegmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSegmentsSegmentArrayOutput)
}

type GetSegmentsSegmentOutput struct{ *pulumi.OutputState }

func (GetSegmentsSegmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSegmentsSegment)(nil)).Elem()
}

func (o GetSegmentsSegmentOutput) ToGetSegmentsSegmentOutput() GetSegmentsSegmentOutput {
	return o
}

func (o GetSegmentsSegmentOutput) ToGetSegmentsSegmentOutputWithContext(ctx context.Context) GetSegmentsSegmentOutput {
	return o
}

// The description of the Segment.
func (o GetSegmentsSegmentOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSegmentsSegment) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the Segment.
func (o GetSegmentsSegmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSegmentsSegment) string { return v.Name }).(pulumi.StringOutput)
}

// The unique Segment ID.
func (o GetSegmentsSegmentOutput) SegmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSegmentsSegment) string { return v.SegmentId }).(pulumi.StringOutput)
}

type GetSegmentsSegmentArrayOutput struct{ *pulumi.OutputState }

func (GetSegmentsSegmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSegmentsSegment)(nil)).Elem()
}

func (o GetSegmentsSegmentArrayOutput) ToGetSegmentsSegmentArrayOutput() GetSegmentsSegmentArrayOutput {
	return o
}

func (o GetSegmentsSegmentArrayOutput) ToGetSegmentsSegmentArrayOutputWithContext(ctx context.Context) GetSegmentsSegmentArrayOutput {
	return o
}

func (o GetSegmentsSegmentArrayOutput) Index(i pulumi.IntInput) GetSegmentsSegmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSegmentsSegment {
		return vs[0].([]GetSegmentsSegment)[vs[1].(int)]
	}).(GetSegmentsSegmentOutput)
}

type GetSettingsSetting struct {
	// The hint of the Setting.
	Hint string `pulumi:"hint"`
	// The key of the Feature Flag/Setting.
	Key string `pulumi:"key"`
	// The name of the Setting.
	Name string `pulumi:"name"`
	// The unique Setting ID.
	SettingId string `pulumi:"settingId"`
	// The Setting's type. Available values: `boolean`|`string`|`int`|`double`.
	SettingType string `pulumi:"settingType"`
}

// GetSettingsSettingInput is an input type that accepts GetSettingsSettingArgs and GetSettingsSettingOutput values.
// You can construct a concrete instance of `GetSettingsSettingInput` via:
//
//	GetSettingsSettingArgs{...}
type GetSettingsSettingInput interface {
	pulumi.Input

	ToGetSettingsSettingOutput() GetSettingsSettingOutput
	ToGetSettingsSettingOutputWithContext(context.Context) GetSettingsSettingOutput
}

type GetSettingsSettingArgs struct {
	// The hint of the Setting.
	Hint pulumi.StringInput `pulumi:"hint"`
	// The key of the Feature Flag/Setting.
	Key pulumi.StringInput `pulumi:"key"`
	// The name of the Setting.
	Name pulumi.StringInput `pulumi:"name"`
	// The unique Setting ID.
	SettingId pulumi.StringInput `pulumi:"settingId"`
	// The Setting's type. Available values: `boolean`|`string`|`int`|`double`.
	SettingType pulumi.StringInput `pulumi:"settingType"`
}

func (GetSettingsSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingsSetting)(nil)).Elem()
}

func (i GetSettingsSettingArgs) ToGetSettingsSettingOutput() GetSettingsSettingOutput {
	return i.ToGetSettingsSettingOutputWithContext(context.Background())
}

func (i GetSettingsSettingArgs) ToGetSettingsSettingOutputWithContext(ctx context.Context) GetSettingsSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingsSettingOutput)
}

// GetSettingsSettingArrayInput is an input type that accepts GetSettingsSettingArray and GetSettingsSettingArrayOutput values.
// You can construct a concrete instance of `GetSettingsSettingArrayInput` via:
//
//	GetSettingsSettingArray{ GetSettingsSettingArgs{...} }
type GetSettingsSettingArrayInput interface {
	pulumi.Input

	ToGetSettingsSettingArrayOutput() GetSettingsSettingArrayOutput
	ToGetSettingsSettingArrayOutputWithContext(context.Context) GetSettingsSettingArrayOutput
}

type GetSettingsSettingArray []GetSettingsSettingInput

func (GetSettingsSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingsSetting)(nil)).Elem()
}

func (i GetSettingsSettingArray) ToGetSettingsSettingArrayOutput() GetSettingsSettingArrayOutput {
	return i.ToGetSettingsSettingArrayOutputWithContext(context.Background())
}

func (i GetSettingsSettingArray) ToGetSettingsSettingArrayOutputWithContext(ctx context.Context) GetSettingsSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSettingsSettingArrayOutput)
}

type GetSettingsSettingOutput struct{ *pulumi.OutputState }

func (GetSettingsSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSettingsSetting)(nil)).Elem()
}

func (o GetSettingsSettingOutput) ToGetSettingsSettingOutput() GetSettingsSettingOutput {
	return o
}

func (o GetSettingsSettingOutput) ToGetSettingsSettingOutputWithContext(ctx context.Context) GetSettingsSettingOutput {
	return o
}

// The hint of the Setting.
func (o GetSettingsSettingOutput) Hint() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingsSetting) string { return v.Hint }).(pulumi.StringOutput)
}

// The key of the Feature Flag/Setting.
func (o GetSettingsSettingOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingsSetting) string { return v.Key }).(pulumi.StringOutput)
}

// The name of the Setting.
func (o GetSettingsSettingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingsSetting) string { return v.Name }).(pulumi.StringOutput)
}

// The unique Setting ID.
func (o GetSettingsSettingOutput) SettingId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingsSetting) string { return v.SettingId }).(pulumi.StringOutput)
}

// The Setting's type. Available values: `boolean`|`string`|`int`|`double`.
func (o GetSettingsSettingOutput) SettingType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSettingsSetting) string { return v.SettingType }).(pulumi.StringOutput)
}

type GetSettingsSettingArrayOutput struct{ *pulumi.OutputState }

func (GetSettingsSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSettingsSetting)(nil)).Elem()
}

func (o GetSettingsSettingArrayOutput) ToGetSettingsSettingArrayOutput() GetSettingsSettingArrayOutput {
	return o
}

func (o GetSettingsSettingArrayOutput) ToGetSettingsSettingArrayOutputWithContext(ctx context.Context) GetSettingsSettingArrayOutput {
	return o
}

func (o GetSettingsSettingArrayOutput) Index(i pulumi.IntInput) GetSettingsSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSettingsSetting {
		return vs[0].([]GetSettingsSetting)[vs[1].(int)]
	}).(GetSettingsSettingOutput)
}

type GetTagsTag struct {
	// The color of the Tag.
	Color string `pulumi:"color"`
	// The name of the Tag.
	Name string `pulumi:"name"`
	// The unique Tag ID.
	TagId string `pulumi:"tagId"`
}

// GetTagsTagInput is an input type that accepts GetTagsTagArgs and GetTagsTagOutput values.
// You can construct a concrete instance of `GetTagsTagInput` via:
//
//	GetTagsTagArgs{...}
type GetTagsTagInput interface {
	pulumi.Input

	ToGetTagsTagOutput() GetTagsTagOutput
	ToGetTagsTagOutputWithContext(context.Context) GetTagsTagOutput
}

type GetTagsTagArgs struct {
	// The color of the Tag.
	Color pulumi.StringInput `pulumi:"color"`
	// The name of the Tag.
	Name pulumi.StringInput `pulumi:"name"`
	// The unique Tag ID.
	TagId pulumi.StringInput `pulumi:"tagId"`
}

func (GetTagsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsTag)(nil)).Elem()
}

func (i GetTagsTagArgs) ToGetTagsTagOutput() GetTagsTagOutput {
	return i.ToGetTagsTagOutputWithContext(context.Background())
}

func (i GetTagsTagArgs) ToGetTagsTagOutputWithContext(ctx context.Context) GetTagsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsTagOutput)
}

// GetTagsTagArrayInput is an input type that accepts GetTagsTagArray and GetTagsTagArrayOutput values.
// You can construct a concrete instance of `GetTagsTagArrayInput` via:
//
//	GetTagsTagArray{ GetTagsTagArgs{...} }
type GetTagsTagArrayInput interface {
	pulumi.Input

	ToGetTagsTagArrayOutput() GetTagsTagArrayOutput
	ToGetTagsTagArrayOutputWithContext(context.Context) GetTagsTagArrayOutput
}

type GetTagsTagArray []GetTagsTagInput

func (GetTagsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsTag)(nil)).Elem()
}

func (i GetTagsTagArray) ToGetTagsTagArrayOutput() GetTagsTagArrayOutput {
	return i.ToGetTagsTagArrayOutputWithContext(context.Background())
}

func (i GetTagsTagArray) ToGetTagsTagArrayOutputWithContext(ctx context.Context) GetTagsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsTagArrayOutput)
}

type GetTagsTagOutput struct{ *pulumi.OutputState }

func (GetTagsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsTag)(nil)).Elem()
}

func (o GetTagsTagOutput) ToGetTagsTagOutput() GetTagsTagOutput {
	return o
}

func (o GetTagsTagOutput) ToGetTagsTagOutputWithContext(ctx context.Context) GetTagsTagOutput {
	return o
}

// The color of the Tag.
func (o GetTagsTagOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsTag) string { return v.Color }).(pulumi.StringOutput)
}

// The name of the Tag.
func (o GetTagsTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsTag) string { return v.Name }).(pulumi.StringOutput)
}

// The unique Tag ID.
func (o GetTagsTagOutput) TagId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsTag) string { return v.TagId }).(pulumi.StringOutput)
}

type GetTagsTagArrayOutput struct{ *pulumi.OutputState }

func (GetTagsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsTag)(nil)).Elem()
}

func (o GetTagsTagArrayOutput) ToGetTagsTagArrayOutput() GetTagsTagArrayOutput {
	return o
}

func (o GetTagsTagArrayOutput) ToGetTagsTagArrayOutputWithContext(ctx context.Context) GetTagsTagArrayOutput {
	return o
}

func (o GetTagsTagArrayOutput) Index(i pulumi.IntInput) GetTagsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagsTag {
		return vs[0].([]GetTagsTag)[vs[1].(int)]
	}).(GetTagsTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionGroupEnvironmentAccessInput)(nil)).Elem(), PermissionGroupEnvironmentAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionGroupEnvironmentAccessArrayInput)(nil)).Elem(), PermissionGroupEnvironmentAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingValuePercentageItemInput)(nil)).Elem(), SettingValuePercentageItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingValuePercentageItemArrayInput)(nil)).Elem(), SettingValuePercentageItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingValueRolloutRuleInput)(nil)).Elem(), SettingValueRolloutRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SettingValueRolloutRuleArrayInput)(nil)).Elem(), SettingValueRolloutRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigsConfigInput)(nil)).Elem(), GetConfigsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigsConfigArrayInput)(nil)).Elem(), GetConfigsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentsEnvironmentInput)(nil)).Elem(), GetEnvironmentsEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentsEnvironmentArrayInput)(nil)).Elem(), GetEnvironmentsEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationsOrganizationInput)(nil)).Elem(), GetOrganizationsOrganizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationsOrganizationArrayInput)(nil)).Elem(), GetOrganizationsOrganizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPermissionGroupsPermissionGroupInput)(nil)).Elem(), GetPermissionGroupsPermissionGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPermissionGroupsPermissionGroupArrayInput)(nil)).Elem(), GetPermissionGroupsPermissionGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPermissionGroupsPermissionGroupEnvironmentAccessInput)(nil)).Elem(), GetPermissionGroupsPermissionGroupEnvironmentAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPermissionGroupsPermissionGroupEnvironmentAccessArrayInput)(nil)).Elem(), GetPermissionGroupsPermissionGroupEnvironmentAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductsProductInput)(nil)).Elem(), GetProductsProductArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductsProductArrayInput)(nil)).Elem(), GetProductsProductArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSegmentsSegmentInput)(nil)).Elem(), GetSegmentsSegmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSegmentsSegmentArrayInput)(nil)).Elem(), GetSegmentsSegmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingsSettingInput)(nil)).Elem(), GetSettingsSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSettingsSettingArrayInput)(nil)).Elem(), GetSettingsSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsTagInput)(nil)).Elem(), GetTagsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsTagArrayInput)(nil)).Elem(), GetTagsTagArray{})
	pulumi.RegisterOutputType(PermissionGroupEnvironmentAccessOutput{})
	pulumi.RegisterOutputType(PermissionGroupEnvironmentAccessArrayOutput{})
	pulumi.RegisterOutputType(SettingValuePercentageItemOutput{})
	pulumi.RegisterOutputType(SettingValuePercentageItemArrayOutput{})
	pulumi.RegisterOutputType(SettingValueRolloutRuleOutput{})
	pulumi.RegisterOutputType(SettingValueRolloutRuleArrayOutput{})
	pulumi.RegisterOutputType(GetConfigsConfigOutput{})
	pulumi.RegisterOutputType(GetConfigsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentsEnvironmentOutput{})
	pulumi.RegisterOutputType(GetEnvironmentsEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationsOrganizationOutput{})
	pulumi.RegisterOutputType(GetOrganizationsOrganizationArrayOutput{})
	pulumi.RegisterOutputType(GetPermissionGroupsPermissionGroupOutput{})
	pulumi.RegisterOutputType(GetPermissionGroupsPermissionGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPermissionGroupsPermissionGroupEnvironmentAccessOutput{})
	pulumi.RegisterOutputType(GetPermissionGroupsPermissionGroupEnvironmentAccessArrayOutput{})
	pulumi.RegisterOutputType(GetProductsProductOutput{})
	pulumi.RegisterOutputType(GetProductsProductArrayOutput{})
	pulumi.RegisterOutputType(GetSegmentsSegmentOutput{})
	pulumi.RegisterOutputType(GetSegmentsSegmentArrayOutput{})
	pulumi.RegisterOutputType(GetSettingsSettingOutput{})
	pulumi.RegisterOutputType(GetSettingsSettingArrayOutput{})
	pulumi.RegisterOutputType(GetTagsTagOutput{})
	pulumi.RegisterOutputType(GetTagsTagArrayOutput{})
}
