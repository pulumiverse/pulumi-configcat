// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package configcat

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-configcat/sdk/go/configcat/internal"
)

// ## # getSdkKeys Resource
//
// Use this data source to access information about **SDK Keys**.
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-configcat/sdk/go/configcat"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myProducts, err := configcat.GetProducts(ctx, &configcat.GetProductsArgs{
//				NameFilterRegex: pulumi.StringRef("ConfigCat's product"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			myConfigs, err := configcat.GetConfigs(ctx, &configcat.GetConfigsArgs{
//				ProductId:       myProducts.Products[0].ProductId,
//				NameFilterRegex: pulumi.StringRef("Main Config"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			myEnvironments, err := configcat.GetEnvironments(ctx, &configcat.GetEnvironmentsArgs{
//				ProductId:       myProducts.Products[0].ProductId,
//				NameFilterRegex: pulumi.StringRef("Test"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			mySdkkey, err := configcat.GetSdkKeys(ctx, &configcat.GetSdkKeysArgs{
//				ConfigId:      myConfigs.Configs[0].ConfigId,
//				EnvironmentId: myEnvironments.Environments[0].EnvironmentId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("primarySdkkey", mySdkkey.Primary)
//			ctx.Export("secondarySdkkey", mySdkkey.Secondary)
//			return nil
//		})
//	}
//
// ```
//
// ## Endpoints used
//
// - [Get SDK Key](https://api.configcat.com/docs/#tag/SDK-Keys/operation/get-sdk-keys)
func GetSdkKeys(ctx *pulumi.Context, args *GetSdkKeysArgs, opts ...pulumi.InvokeOption) (*GetSdkKeysResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSdkKeysResult
	err := ctx.Invoke("configcat:index/getSdkKeys:getSdkKeys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSdkKeys.
type GetSdkKeysArgs struct {
	// The ID of the Config.
	ConfigId string `pulumi:"configId"`
	// The ID of the Environment.
	EnvironmentId string `pulumi:"environmentId"`
}

// A collection of values returned by getSdkKeys.
type GetSdkKeysResult struct {
	ConfigId      string `pulumi:"configId"`
	EnvironmentId string `pulumi:"environmentId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The primary SDK Key associated with your **Config** and **Environment**.
	Primary string `pulumi:"primary"`
	// The secondary SDK Key associated with your **Config** and **Environment**.
	Secondary string `pulumi:"secondary"`
}

func GetSdkKeysOutput(ctx *pulumi.Context, args GetSdkKeysOutputArgs, opts ...pulumi.InvokeOption) GetSdkKeysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSdkKeysResultOutput, error) {
			args := v.(GetSdkKeysArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetSdkKeysResult
			secret, err := ctx.InvokePackageRaw("configcat:index/getSdkKeys:getSdkKeys", args, &rv, "", opts...)
			if err != nil {
				return GetSdkKeysResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetSdkKeysResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetSdkKeysResultOutput), nil
			}
			return output, nil
		}).(GetSdkKeysResultOutput)
}

// A collection of arguments for invoking getSdkKeys.
type GetSdkKeysOutputArgs struct {
	// The ID of the Config.
	ConfigId pulumi.StringInput `pulumi:"configId"`
	// The ID of the Environment.
	EnvironmentId pulumi.StringInput `pulumi:"environmentId"`
}

func (GetSdkKeysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdkKeysArgs)(nil)).Elem()
}

// A collection of values returned by getSdkKeys.
type GetSdkKeysResultOutput struct{ *pulumi.OutputState }

func (GetSdkKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSdkKeysResult)(nil)).Elem()
}

func (o GetSdkKeysResultOutput) ToGetSdkKeysResultOutput() GetSdkKeysResultOutput {
	return o
}

func (o GetSdkKeysResultOutput) ToGetSdkKeysResultOutputWithContext(ctx context.Context) GetSdkKeysResultOutput {
	return o
}

func (o GetSdkKeysResultOutput) ConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdkKeysResult) string { return v.ConfigId }).(pulumi.StringOutput)
}

func (o GetSdkKeysResultOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdkKeysResult) string { return v.EnvironmentId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSdkKeysResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdkKeysResult) string { return v.Id }).(pulumi.StringOutput)
}

// The primary SDK Key associated with your **Config** and **Environment**.
func (o GetSdkKeysResultOutput) Primary() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdkKeysResult) string { return v.Primary }).(pulumi.StringOutput)
}

// The secondary SDK Key associated with your **Config** and **Environment**.
func (o GetSdkKeysResultOutput) Secondary() pulumi.StringOutput {
	return o.ApplyT(func(v GetSdkKeysResult) string { return v.Secondary }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSdkKeysResultOutput{})
}
